{
  "version": 3,
  "file": "cxltx-demo.js",
  "sourceRoot": "..",
  "sources": [
    "src/cxltx-demo.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;;;EAkBA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAE,CAAF,EAAK,MAAL,EAAa,KAAb,EAAoB,UAApB,CAAA;AAEf,QAAA;IAAA,CAAA,GAAY,CAAE,UAAA,CAAW,CAAX,CAAF,CAAA,GAAmB;IAC/B,KAAA,GAAY,UAAA,CAAW,KAAX;IACZ,IAAA,CAA+D,GAAG,CAAC,UAAJ,CAAe,CAAf,CAA/D;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,uBAAA,CAAA,CAA0B,GAAA,CAAI,CAAJ,CAA1B,CAAA,CAAV,EAAN;;IACA,IAAA,CAA+D,GAAG,CAAC,UAAJ,CAAe,KAAf,CAA/D;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,uBAAA,CAAA,CAA0B,GAAA,CAAI,KAAJ,CAA1B,CAAA,CAAV,EAAN;;IACA,IAA+D,MAAA,KAAU,IAAzE;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,mBAAA,CAAA,CAAsB,GAAA,CAAI,MAAJ,CAAtB,CAAA,CAAV,EAAN;;IACA,IAA+D,UAAA,KAAc,IAA7E;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,mBAAA,CAAA,CAAsB,GAAA,CAAI,UAAJ,CAAtB,CAAA,CAAV,EAAN;;IACA,CAAA,GAAY,CAAA,GAAI;IAChB,CAAA,GAAY,CAAC,CAAC,OAAF,CAAU,CAAV;IACL,IAAG,CAAA,KAAK,MAAR;aAAoB,MAApB;KAAA,MAAA;aAA+B,EAA/B;;EAVQ,EAlBjB;;;EA+BA,IAAO,qBAAP;IACE,KAAA,GAAQ;IACR,CAAE,CAAF,EAAK,CAAL,EAAQ,WAAR,EAAqB,GAAA,CAArB,CAAA,GAA+B,OAAO,CAAC,KADvC;;IAGA,IAAA,CAAK,KAAO,CAAA,WAAA,CAAP,CAAqB,GAAA,CAArB,CAAL,EAJF;;AA/BA",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'CXLTX/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\n\n # 4661697 - 2797018\n\n#-----------------------------------------------------------------------------------------------------------\n@as_here_x_ref = ( x, x_unit, delta, delta_unit ) ->\n  ### convert from `sp` (scaled points) to tenths of mm ###\n  x         = ( parseFloat x ) / 186467.9\n  delta     = parseFloat delta\n  throw new Error \"expected a number, got #{rpr x}\"       unless CND.isa_number x\n  throw new Error \"expected a number, got #{rpr delta}\"   unless CND.isa_number delta\n  throw new Error \"expected 'sp', got #{rpr x_unit}\"      unless x_unit is 'sp'\n  throw new Error \"expected 'mm', got #{rpr delta_unit}\"  unless delta_unit is 'mm'\n  x         = x - delta\n  R         = x.toFixed 1\n  return if R is '-0.0' then '0.0' else R\n\n#-----------------------------------------------------------------------------------------------------------\nunless module.parent?\n  CXLTX = @\n  [ _, _, method_name, P..., ] = process.argv\n  # debug '34474', P\n  echo CXLTX[ method_name ] P...\n\n\n"
  ]
}