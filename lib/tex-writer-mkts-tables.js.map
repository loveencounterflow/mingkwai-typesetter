{
  "version": 3,
  "file": "tex-writer-mkts-tables.js",
  "sourceRoot": "..",
  "sources": [
    "src/tex-writer-mkts-tables.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/TEX-WRITER/MKTSTABLES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nECS                       = require './eval-cs'\nMKTS                      = require './main'\nMD_READER                 = require './md-reader'\nhide                      = MD_READER.hide.bind        MD_READER\ncopy                      = MD_READER.copy.bind        MD_READER\nstamp                     = MD_READER.stamp.bind       MD_READER\nunstamp                   = MD_READER.unstamp.bind     MD_READER\nselect                    = MD_READER.select.bind      MD_READER\nis_hidden                 = MD_READER.is_hidden.bind   MD_READER\nis_stamped                = MD_READER.is_stamped.bind  MD_READER\n#...........................................................................................................\nMKTS.MACRO_ESCAPER.register_raw_tag 'mkts-table'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@$main = ( S ) ->\n  #.........................................................................................................\n  return D.TEE.from_pipeline [\n    @$parse_description               S\n    @$show_metrics                    S\n    ]\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@$show_metrics = ( S ) -> D.$observe ( event ) ->\n  return unless select event, '.', 'mkts-table-description'\n  help '99871', ( CND.blue rpr event[ 2 ] )\n\n#-----------------------------------------------------------------------------------------------------------\n@$parse_description = ( S ) ->\n  return $ ( event, send ) =>\n    #.......................................................................................................\n    if select event, '.', 'mkts-table'\n      [ type, name, text, meta, ] = event\n      description                 = {}\n      sandbox                     = @get_mkts_table_definition_language_sandbox S, event, description\n      debug '37733', sandbox\n      try\n        ECS.evaluate text, { language: 'coffee', sandbox, }\n      catch error\n        warn \"when trying to evaluate CS source text for <mkts-table> (source line ##{meta.line_nr}),\"\n        warn \"an error occurred\"\n        throw error\n      send stamp event\n      send [ '.', 'mkts-table-description', description, ( copy meta ), ]\n    #.......................................................................................................\n    else\n      send event\n    #.......................................................................................................\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@get_mkts_table_definition_language_sandbox = ( S, event, description ) ->\n  ### This method makes the format-defining names of the MKTS Table Formatter available at the top level,\n  curried so that the current context (`me`) that contains the processed details as defined so far as well\n  as data on the general typesetting context. All names are templating functions, such that each may be\n  called as `grid'4x4'`, `merge'[a1]..[a4]'` and so on from the source within the MKTS document where the\n  table is being defined. ###\n  me      = description\n  me.meta = event[ 3 ]\n  ### ... more typesetting detail attached here ... ###\n  #.........................................................................................................\n  f = ->\n    @grid   = ( template ) -> MKTSTF.grid  me, template\n    @merge  = ( template ) -> MKTSTF.merge me, template\n    return @\n  #.........................................................................................................\n  return f.apply {}\n\n\n#===========================================================================================================\n# MKTS TABLE FORMATTER\n#-----------------------------------------------------------------------------------------------------------\nrequire_mkts_table_formatter = ->\n\n  #-----------------------------------------------------------------------------------------------------------\n  @grid = ( me, t ) ->\n    #.........................................................................................................\n    if me.grid?\n      throw new Error \"(MKTSTABLES 3124) illegal to redefine grid\"\n    unless ( type = CND.type_of t ) is 'text'\n      throw new Error \"(MKTSTABLES 5183) need a text for mkts-table/grid, got a #{type}\"\n    unless ( match = t.match /^(\\d+)\\s*x(\\d+)$/ )?\n      throw new Error \"(MKTSTABLES 7414) need a text like '3 x 4' or similar for mkts-table/grid, got #{rpr t}\"\n    #.........................................................................................................\n    [ _, col_count_txt, row_count_txt, ] = match\n    me.grid = { width: ( parseInt col_count_txt, 10 ), height: ( parseInt row_count_txt, 10 ), }\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  @merge = ( me, text ) ->\n    me.cells ?= []\n    #.........................................................................................................\n    unless ( type = CND.type_of text ) is 'text'\n      throw new Error \"(MKTSTABLES 3075) need a text for mkts-table/merge, got a #{type}\"\n    #.........................................................................................................\n    for merge_quadref, idx in d.merge\n      me.cells.push @parse_merge_quadref merge_quadref\n    #.........................................................................................................\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  @_idx_from_col_and_row = ( col, row ) ->\n    unless ( type = CND.type_of col ) is 'text'\n      throw new Error \"(MKTSTABLES 4726) expected a text for col, got a #{rpr type}\"\n    unless ( type = CND.type_of row ) is 'text'\n      throw new Error \"(MKTSTABLES 8186) expected a text for row, got a #{rpr type}\"\n    col_idx = ( col.codePointAt 0 ) - ( 'a'.codePointAt 0 )\n    row_idx = ( parseInt row, 10 ) - 1\n    return { col: col_idx, row: row_idx, }\n\n  #-----------------------------------------------------------------------------------------------------------\n  ### TAINT use proper parsing tool ###\n  @parse_merge_quadref = ( merge_quadref ) ->\n    unless ( type = CND.type_of merge_quadref ) is 'text'\n      throw new Error \"(MKTSTABLES 2120) expected a text for merge_quadref, got a #{rpr type}\"\n    ### TAINT only supports quadrefs `[a1]` thru `[z99]` ###\n    unless ( match = merge_quadref.match /^\\[([a-z])([0-9]{1,2})\\]\\.\\.\\[([a-z])([0-9]{1,2})\\]$/ )?\n      throw new Error \"(MKTSTABLES 6098) expected a merge-quadref like '[a1]..[d4]', got #{rpr merge_quadref}\"\n    debug '37373', match\n    [ _, q1col, q1row, q2col, q2row, ] = match\n    q1idx = @_idx_from_col_and_row q1col, q1row\n    q2idx = @_idx_from_col_and_row q2col, q2row\n    ### TAINT validate that q2 is not to the left / top of q1 ###\n    return { q1idx, q2idx, }\n\n  #-----------------------------------------------------------------------------------------------------------\n  return null\n\n\n############################################################################################################\nMKTSTF = {}\nrequire_mkts_table_formatter.apply MKTSTF\n\n\n"
  ]
}