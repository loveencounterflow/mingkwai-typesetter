// Generated by CoffeeScript 2.3.2
(function() {
  //###########################################################################################################
  var CND, XREGEXP, alert, badge, debug, demo_1, demo_2, echo, help, info, log, njs_fs, njs_path, remark_grid_tables, remark_parse, remark_to_html, remark_to_rehype, rpr, show_permutations, stringify, unified, urge, warn, whisper, x;

  njs_path = require('path');

  njs_fs = require('fs');

  //...........................................................................................................
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'MK/TS/MACRO-ESCAPER/mkts-tables';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  XREGEXP = require('xregexp');

  unified = require('unified');

  remark_parse = require('remark-parse');

  stringify = require('rehype-stringify');

  remark_to_rehype = require('remark-rehype');

  remark_to_html = require('remark-html');

  remark_grid_tables = require('remark-grid-tables');

  //-----------------------------------------------------------------------------------------------------------
  show_permutations = function() {
    var column, columns, i, len, results, row, rows;
    columns = ['O', 'A', 'B', 'C', 'Z'];
    rows = ['O', 'A', 'B', 'C', 'Z'];
    results = [];
    for (i = 0, len = columns.length; i < len; i++) {
      column = columns[i];
      results.push((function() {
        var j, len1, results1;
        results1 = [];
        for (j = 0, len1 = rows.length; j < len1; j++) {
          row = rows[j];
          results1.push(echo(`      \\node[color=gray] at ( \\c${column}, \\r${row} ) {{\\mktsStyleCode{}${column}${row}}};`));
        }
        return results1;
      })());
    }
    return results;
  };

  //-----------------------------------------------------------------------------------------------------------
  // .use remark_to_rehype
  x = unified().use(remark_parse).use(remark_grid_tables).use(stringify).use(remark_to_html);

  demo_1 = "+-------+----------+------+\n| Table Headings   | Here |\n+-------+----------+------+\n| Sub   | Headings | Too  |\n+=======+==========+======+\n| cell  | column spanning |\n+ spans +----------+------+\n| rows  | normal   | cell |\n+-------+----------+------+\n| multi | cells can be    |\n| line  | *formatted*     |\n|       | **paragraphs**  |\n| cells |                 |\n| too   |                 |\n+-------+-----------------+\n";

  debug(x.stringify(x.parse(demo_1)));

  demo_2 = "+-------+----------+------+\n| Table Headings   | Here |\n+-------+----------+------+\n| Sub   | Headings | Too  |\n+-------+----------+------+\n| Sub   | Headings | Too  |\n+=======+==========+======+\n| cell  | column spanning |\n+ spans +----------+------+\n| rows  | normal   | cell |\n+-------+----------+------+\n| multi | cells can be    |\n| line  | *formatted*     |\n|       | **paragraphs**  |\n| cells |                 |\n| too   |                 |\n+-------+-----------------+\n\n\n";

  debug(x.stringify(x.parse(demo_2)));

}).call(this);

//# sourceMappingURL=mkts-tables.js.map
