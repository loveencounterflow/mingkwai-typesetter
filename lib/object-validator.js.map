{
  "version": 3,
  "file": "object-validator.js",
  "sourceRoot": "..",
  "sources": [
    "src/object-validator.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/VALIDATOR'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\njr                        = JSON.stringify\nAjv                       = require 'ajv'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_message_from_error = ( data, error ) ->\n  R = []\n  R.push \"OVAL Âµ33892 property #{error.dataPath}: #{error.message} (got #{rpr error.data})\"\n  return R.join '\\n'\n\n#-----------------------------------------------------------------------------------------------------------\n@_message_from_errors = ( data, errors ) ->\n  R = []\n  R.push @_message_from_error data, error for error in errors\n  R.push ''\n  R.push jr data\n  R.push ''\n  return R.join '\\n'\n\n#-----------------------------------------------------------------------------------------------------------\n@new_validator = ( schema, settings = null ) ->\n  delete schema.postprocess if ( postprocess = schema.postprocess )?\n  postprocess      ?= ( data ) -> data\n  defaults          = { coerceTypes: true, allErrors: true, verbose: true, }\n  settings          = Object.assign {}, settings, defaults\n  ajv               = new Ajv settings\n  validate_and_cast = ajv.compile schema\n  return ( data ) =>\n    R = CND.deep_copy data\n    unless validate_and_cast R\n      throw new Error @_message_from_errors R, validate_and_cast.errors\n    return postprocess R\n\n\n############################################################################################################\nunless module.parent?\n  OVAL = @\n\n  schema =\n    # properties:\n    #   foo:  { type: 'integer', }\n    #   bar:  { type: 'boolean', }\n    # required: [ 'foo', 'bar', ]\n    # additionalProperties: false\n    properties:\n      abs:    { type: 'number', }\n      rel:    { type: 'number', }\n      lines:  { type: [ 'boolean', 'string', ], }\n    # required:             [ 'foo', 'bar', ]\n    additionalProperties: false\n\n  validate  = OVAL.new_validator schema\n\n  probes = [\n    { abs: '0.8', }\n    { abs: '0.8', lines: '', }\n    { rel: '0.8', }\n    { rel: '0.8', lines: '', }\n    # { foo: '1', bar: 'true', baz: 'true' }\n    # { foo: '1.1', bar: 'f', baz: 'true' }\n    # {}\n    # { foo: '1', bar: 'true', }\n    ]\n  for data in probes\n    echo()\n    try\n      debug validate data\n    catch error\n      warn error.message\n      continue\n    help data\n\n\n\n"
  ]
}