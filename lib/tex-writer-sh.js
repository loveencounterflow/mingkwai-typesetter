// Generated by CoffeeScript 2.3.1
(function() {
  'use strict';
  var $, $async, CND, CP, D, MD_READER, alert, badge, copy, debug, echo, help, hide, info, is_hidden, is_stamped, log, rpr, select, stamp, urge, warn, whisper;

  //###########################################################################################################
  // njs_path                  = require 'path'
  // njs_fs                    = require 'fs'
  //...........................................................................................................
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'mkts/tex-writer-sh';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  D = require('../../../pipedreams');

  ({$} = D);

  $async = D.remit_async.bind(D);

  //...........................................................................................................
  MD_READER = require('./md-reader');

  hide = MD_READER.hide.bind(MD_READER);

  copy = MD_READER.copy.bind(MD_READER);

  stamp = MD_READER.stamp.bind(MD_READER);

  select = MD_READER.select.bind(MD_READER);

  is_hidden = MD_READER.is_hidden.bind(MD_READER);

  is_stamped = MD_READER.is_stamped.bind(MD_READER);

  //...........................................................................................................
  CP = require('child_process');

  //-----------------------------------------------------------------------------------------------------------
  this.$spawn = (S) => {
    return $async((event, send, end) => {
      var cmd, cp, meta, name, parameters, type;
      //.......................................................................................................
      if ((event != null) && select(event, '!', 'sh')) {
        [type, name, parameters, meta] = event;
        [cmd] = parameters;
        cp = CP.spawn(cmd, {
          shell: true
        });
        //...................................................................................................
        cp.stdout.pipe(D.$split()).pipe(D.$show('================>')).pipe($((line, _, sub_end) => {
          send(['.', 'text', line + '\n', copy(meta)]);
          if (sub_end != null) {
            send.done();
            return sub_end();
          }
        }));
      } else {
        //.......................................................................................................
        send(event);
        send.done();
      }
      if (end != null) {
        //.......................................................................................................
        end();
      }
      return null;
    });
  };

}).call(this);

//# sourceMappingURL=tex-writer-sh.js.map
