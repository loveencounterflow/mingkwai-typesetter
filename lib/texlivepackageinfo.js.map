{
  "version": 3,
  "file": "texlivepackageinfo.js",
  "sourceRoot": "..",
  "sources": [
    "src/texlivepackageinfo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n############################################################################################################\n# njs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'mkts/texlivepackageinfo'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n# #...........................................................................................................\n# suspend                   = require 'coffeenode-suspend'\n# step                      = suspend.step\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n#...........................................................................................................\n{ CACHE, OPTIONS, }       = require './options-and-cache'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@read_texlive_package_version = ( options, package_name, handler ) ->\n  key     = \"texlive-package-versions/#{package_name}\"\n  method  = ( done ) => @_read_texlive_package_version package_name, done\n  CACHE.get options, key, method, yes, handler\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_read_texlive_package_version = ( package_name, handler ) ->\n  ### Given a `package_name` and a `handler`, try to retrieve that package's info as reported by the TeX\n  Live Manager command line tool (using `tlmgr info ${package_name}`), extract the `cat-version` entry and\n  normalize it so it matches the [Semantic Versioning specs](http://semver.org/). If no version is found,\n  the `handler` will be called with a `null` value instead of a string; however, if a version *is* found but\n  does *not* match the SemVer specs after normalization, the `handler` will be called with an error.\n\n  Normalization steps include removing leading `v`s, trailing letters, and leading zeroes. ###\n  leading_zero_pattern  = /^0+(?!$)/\n  semver_pattern        = /^([0-9]+)\\.([0-9]+)\\.?([0-9]*)$/\n  @read_texlive_package_info package_name, ( error, package_info ) =>\n    return handler error if error?\n    #.......................................................................................................\n    unless ( version = o_version = package_info[ 'cat-version' ] )?\n      warn \"unable to detect version for package #{rpr package_name}\"\n      return handler null, null\n      # return handler new Error \"unable to detect version for package #{rpr package_name}\"\n    #.......................................................................................................\n    version = version.replace /[^0-9]+$/, ''\n    version = version.replace /^v/, ''\n    #.......................................................................................................\n    unless ( match = version.match semver_pattern )?\n      return handler new Error \"unable to parse version #{rpr o_version} of package #{rpr name}\"\n    #.......................................................................................................\n    [ _, major, minor, patch, ] = match\n    ### thx to http://stackoverflow.com/a/2800839/256361 ###\n    major = major.replace leading_zero_pattern, ''\n    minor = minor.replace leading_zero_pattern, ''\n    patch = patch.replace leading_zero_pattern, ''\n    major = if major.length > 0 then major else '0'\n    minor = if minor.length > 0 then minor else '0'\n    patch = if patch.length > 0 then patch else '0'\n    #.......................................................................................................\n    handler null, \"#{major}.#{minor}.#{patch}\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@read_texlive_package_info = ( package_name, handler ) ->\n  command     = 'tlmgr'\n  parameters  = [ 'info', package_name, ]\n  input       = D.spawn_and_read_lines command, parameters\n  Z           = {}\n  pattern     = /^([^:]+):(.*)$/\n  #.........................................................................................................\n  input\n    #.......................................................................................................\n    .pipe $ ( line, send ) =>\n      return if line.length is 0\n      match = line.match pattern\n      return send.error new Error \"unexpected line: #{rpr line}\" unless match?\n      [ _, name, value, ] = match\n      name                = name.trim()\n      value               = value.trim()\n      Z[ name ]           = value\n    #.......................................................................................................\n    .pipe D.$on_end -> handler null, Z\n  #.........................................................................................................\n  return null\n"
  ]
}