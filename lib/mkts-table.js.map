{
  "version": 3,
  "file": "mkts-table.js",
  "sourceRoot": "..",
  "sources": [
    "src/mkts-table.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS/TABLE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nECS                       = require './eval-cs'\nMKTS                      = require './main'\nMD_READER                 = require './md-reader'\nhide                      = MD_READER.hide.bind        MD_READER\ncopy                      = MD_READER.copy.bind        MD_READER\nstamp                     = MD_READER.stamp.bind       MD_READER\nunstamp                   = MD_READER.unstamp.bind     MD_READER\nselect                    = MD_READER.select.bind      MD_READER\nis_hidden                 = MD_READER.is_hidden.bind   MD_READER\nis_stamped                = MD_READER.is_stamped.bind  MD_READER\n#...........................................................................................................\ncopy                      = ( x ) -> Object.assign {}, x\nEXCJSCC                   = require './exceljs-spreadsheet-address-codec'\n\n\n\n#===========================================================================================================\n# INITIALIZATION\n#-----------------------------------------------------------------------------------------------------------\n@_new_description = ( S ) ->\n  R =\n    '~isa':     'MKTS/TABLE/description'\n    # grid:       { width: 4, height: 4, }\n    # ### default unit for width, height: ###\n    # u:\n    #   width:    '10mm'\n    #   height:   '10mm'\n    cells:              []\n    quadwidths:         null\n    quadheights:        null\n    joint_coordinates:  null\n    cellgrid:           false\n    default:\n      gridwidth:  4\n      gridheight: 4\n      unitwidth:  '1mm'\n      unitheight: '1mm'\n      quadwidth:  10\n      quadheight: 10\n  return R\n\n\n#===========================================================================================================\n# PUBLIC API\n#-----------------------------------------------------------------------------------------------------------\n@gridwidth = ( me, text ) ->\n  #.........................................................................................................\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 8082) need a text for mkts-table/gridwidth, got a #{type}\"\n  unless ( match = text.match /^\\s*(\\d+)\\s*$/ )?\n    throw new Error \"(MKTS/TABLE 9000) need a text like '3' or similar for mkts-table/gridwidth, got #{rpr text}\"\n  if me.gridwidth?\n    throw new Error \"(MKTS/TABLE 1282) unable to re-define gridwidth\"\n  #.........................................................................................................\n  me.gridwidth      = parseInt match[ 1 ], 10\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@gridheight = ( me, text ) ->\n  #.........................................................................................................\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 4532) need a text for mkts-table/gridheight, got a #{type}\"\n  unless ( match = text.match /^\\s*(\\d+)\\s*$/ )?\n    throw new Error \"(MKTS/TABLE 3691) need a text like '3' or similar for mkts-table/gridheight, got #{rpr text}\"\n  if me.gridheight?\n    throw new Error \"(MKTS/TABLE 5164) unable to re-define gridheight\"\n  #.........................................................................................................\n  me.gridheight     = parseInt match[ 1 ], 10\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@unitwidth = ( me, text ) ->\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 4959) need a text for mkts-table/unitwidth, got a #{type}\"\n  if me.unitwidth?\n    throw new Error \"(MKTS/TABLE 7732) unable to re-define unitheight\"\n  #.........................................................................................................\n  me.unitwidth = text\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@unitheight = ( me, text ) ->\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 3643) need a text for mkts-table/unitheight, got a #{type}\"\n  if me.unitheight?\n    throw new Error \"(MKTS/TABLE 3537) unable to re-define unitheight\"\n  #.........................................................................................................\n  me.unitheight = text\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@cell = ( me, text ) ->\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 9791) need a text for mkts-table/cell, got a #{type}\"\n  #.........................................................................................................\n  @_ensure_gridwidth  me\n  @_ensure_gridheight me\n  @_ensure_unitvector me\n  cell = @_parse_range_quadref me, text\n  if cell.right > me.gridwidth\n    throw new Error \"(MKTS/TABLE 1274) cell exceeds grid width: #{rpr text}\"\n  if cell.bottom > me.gridheight\n    throw new Error \"(MKTS/TABLE 6069) cell exceeds grid height: #{rpr text}\"\n  me.cells.push cell\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@cellgrid = ( me, text ) ->\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 9791) need a text for mkts-table/cell, got a #{type}\"\n  #.........................................................................................................\n  switch text\n    when 'true'   then me.cellgrid = true\n    when 'false'  then me.cellgrid = false\n    else throw new Error \"(MKTS/TABLE 9791) expected 'true' or 'false' for mkts-table/cellgrid, got a #{rpr text}\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@cellspacing = ( me, text ) ->\n  unless ( type = CND.type_of text ) is 'text'\n    throw new Error \"(MKTS/TABLE 1539) need a text for mkts-table/cellspacing, got a #{type}\"\n  #.........................................................................................................\n  @_ensure_unitvector me\n  me.cellspacing = @_parse_coordinate_without_units me, text\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\n# PARSERS ETC\n#-----------------------------------------------------------------------------------------------------------\n@_idx_from_col_and_row = ( col, row ) ->\n  unless ( type = CND.type_of col ) is 'text'\n    throw new Error \"(MKTS/TABLE 1763) expected a text for col, got a #{rpr type}\"\n  unless ( type = CND.type_of row ) is 'text'\n    throw new Error \"(MKTS/TABLE 4752) expected a text for row, got a #{rpr type}\"\n  #.........................................................................................................\n  col_idx = ( col.codePointAt 0 ) - ( 'a'.codePointAt 0 )\n  row_idx = ( parseInt row, 10 ) - 1\n  return { col: col_idx, row: row_idx, }\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper parsing tool ###\n@_parse_range_quadref = ( me, quad_range ) ->\n  unless ( type = CND.type_of quad_range ) is 'text'\n    throw new Error \"(MKTS/TABLE 9879) expected a text for quad_range, got a #{rpr type}\"\n  unless ( match = quad_range.match /^([a-z]{1,3})([0-9]{1,4}):([a-z]{1,3})([0-9]{1,4})$/ )?\n    throw new Error \"(MKTS/TABLE 3807) expected a quad range like 'a1:d4', got #{rpr quad_range}\"\n  ### TAINT don't use EXCJSCC directly ###\n  R = EXCJSCC.decode quad_range.toUpperCase()\n  delete R.dimensions\n  R.tl = R.tl.toLowerCase()\n  R.br = R.br.toLowerCase()\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper parsing tool ###\n@_parse_coordinate_with_units = ( me, coordinate ) ->\n  unless ( type = CND.type_of coordinate ) is 'text'\n    throw new Error \"(MKTS/TABLE 8077) expected a text for coordinate, got a #{rpr type}\"\n  unless ( match = coordinate.match /^\\s*\\(\\s*([-0-9.]{1,8}[a-z]{0,3})\\s*,\\s*([-0-9.]{1,8}[a-z]{0,3})\\s*\\)\\s*$/ )?\n    throw new Error \"(MKTS/TABLE 3191) expected a coordinate with units like '( 1mm, 2.4cm )', got #{rpr coordinate}\"\n  [ _, x, y, ] = match\n  return { x, y, }\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper parsing tool ###\n@_parse_coordinate_without_units = ( me, coordinate ) ->\n  unless ( type = CND.type_of coordinate ) is 'text'\n    throw new Error \"(MKTS/TABLE 3975) expected a text for coordinate, got a #{rpr type}\"\n  unless ( match = coordinate.match /^\\s*\\(\\s*([-0-9.]{1,8})\\s*,\\s*([-0-9.]{1,8})\\s*\\)\\s*$/ )?\n    throw new Error \"(MKTS/TABLE 2658) expected a unitless coordinate like '( 1, 2.4 )', got #{rpr coordinate}\"\n  [ _, x, y, ] = match\n  return { x, y, }\n\n\n#===========================================================================================================\n# EVENT GENERATORS\n#-----------------------------------------------------------------------------------------------------------\n@_walk_events = ( me ) ->\n  #.........................................................................................................\n  yield from @_walk_opening_events                      me\n  yield from @_walk_cellspacing_events                  me\n  yield from @_walk_column_and_row_coordinates_events   me\n  yield from @_walk_joint_coordinates_events            me\n  yield from @_walk_quad_sides_events                   me\n  yield from @_walk_quad_coordinates_events             me\n  yield from @_walk_debugging_events                    me\n  yield from @_walk_cellgrid_events                     me\n  yield from @_walk_closing_events                      me\n  #.........................................................................................................\n  # ### dump description for debugging ###\n  # ### TAINT make dump configurable ###\n  # ### TAINT print in smaller type ###\n  # yield [ 'tex', '\\\\par{}', ]\n  # yield [ 'text', \"MKTS Table Description:\\n\\n\", ( copy me.meta ), ]\n  # yield [ '(', 'code', [],                       ( copy me.meta ), ]\n  # yield [ '.', 'text', ( rpr me ),               ( copy me.meta ), ]\n  # yield [ ')', 'code', [],                       ( copy me.meta ), ]\n  # yield [ 'tex', '\\\\par{}', ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_opening_events = ( me ) ->\n  @_ensure_unitvector me\n  yield [ 'tex', \"\\n\\n\", ]\n  yield [ 'tex', \"\\\\par% Beginning of MKTS Table ==============================================================================\\n\", ]\n  yield [ 'tex', \"{\\\\setlength{\\\\fboxsep}{0mm}%\\n\", ]\n  ### TAINT insert proper dimensions ###\n  yield [ 'tex', \"\\\\framebox{\\\\begin{minipage}[t][45mm][t]{100mm}%\\n\", ]\n  ### !!!!!!!!!!!!!!!!!!!!! ###\n  yield [ '.', 'text', \"table goes here\", ( copy me.meta ), ]\n  ### !!!!!!!!!!!!!!!!!!!!! ###\n  yield [ 'tex', \"\\\\begin{tikzpicture}[ overlay, yshift = 0mm, yscale = -1, line cap = round ]%\\n\", ]\n  yield [ 'tex', \"\\\\tikzset{ x = #{me.unitheight} };%\\n\", ]\n  yield [ 'tex', \"\\\\tikzset{ y = #{me.unitheight} };%\\n\", ]\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_closing_events = ( me ) ->\n  yield [ 'tex', \"\\\\end{tikzpicture}%\\n\", ]\n  yield [ 'tex', \"\\\\end{minipage}}}%\\n\", ]\n  yield [ 'tex', \"\\\\par% End of MKTS Table ====================================================================================\\n\\n\", ]\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_cellspacing_events = ( me ) ->\n  ### TAINT should rather use default cellspacing ###\n  return null unless me.cellspacing?\n  yield [ 'tex', \"\\\\coordinate (horizontal spacing)  at ( #{me.cellspacing.x}, 0 );%\\n\", ]\n  yield [ 'tex', \"\\\\coordinate (vertical spacing)    at ( 0, #{me.cellspacing.y} );%\\n\", ]\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_column_and_row_coordinates_events = ( me ) ->\n  @_ensure_joint_coordinates  me\n  x_position  = 0\n  y_position  = 0\n  #.........................................................................................................\n  for [ col_letter, col_nr, ] from @_walk_column_letters_and_numbers me, 'long'\n    yield [ 'tex', \"\\\\coordinate (c#{col_letter}) at ( #{x_position}, 0 );%\\n\", ]\n    x_position += me.quadwidths[ col_nr ]\n  #.........................................................................................................\n  for row_nr from @_walk_row_numbers me, 'long'\n    yield [ 'tex', \"\\\\coordinate (r#{row_nr}) at ( 0, #{y_position} );%\\n\", ]\n    y_position += me.quadheights[ row_nr ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_joint_coordinates_events = ( me ) ->\n  @_ensure_joint_coordinates  me\n  x_position  = 0\n  y_position  = 0\n  #.........................................................................................................\n  ### TAINT code duplication; use iterator ###\n  for [ col_letter, col_nr, ] from @_walk_column_letters_and_numbers me, 'long'\n    for row_nr from @_walk_row_numbers me, 'long'\n      joint = \"#{col_letter}#{row_nr}\"\n      yield [ 'tex', \"\\\\coordinate (joint #{joint}) at ($ (c#{col_letter}) + (r#{row_nr}) $);%\\n\", ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_quad_sides_events = ( me ) ->\n  @_ensure_joint_coordinates  me\n  #.........................................................................................................\n  for [ col_letter, col_nr, ] from @_walk_column_letters_and_numbers me, 'long'\n    yield [ 'tex', \"\\\\coordinate (c#{col_letter} W) at ($ (c#{col_letter}) - (horizontal spacing) $);%\\n\", ]\n    yield [ 'tex', \"\\\\coordinate (c#{col_letter} E) at ($ (c#{col_letter}) + (horizontal spacing) $);%\\n\", ]\n  #.........................................................................................................\n  for row_nr from @_walk_row_numbers me, 'long'\n    yield [ 'tex', \"\\\\coordinate (r#{row_nr} N) at ($ (r#{row_nr}) - (vertical spacing) $);%\\n\", ]\n    yield [ 'tex', \"\\\\coordinate (r#{row_nr} S) at ($ (r#{row_nr}) + (vertical spacing) $);%\\n\", ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_quad_coordinates_events = ( me ) ->\n  @_ensure_joint_coordinates  me\n  #.........................................................................................................\n  ### TAINT code duplication; use iterator ###\n  for [ col_letter_1, col_nr_1, ] from @_walk_column_letters_and_numbers me, 'short'\n    col_nr_2      = col_nr_1 + 1\n    ### TAINT don't use EXCJSCC directly ###\n    col_letter_2  = ( EXCJSCC.n2l col_nr_2 ).toLowerCase()\n    for row_nr_1 from @_walk_row_numbers me, 'short'\n      row_nr_2  = row_nr_1 + 1\n      quad = \"#{col_letter_1}#{row_nr_1}\"\n      yield [ 'tex', \"\\\\coordinate (quad #{quad} top left)      at ($ (r#{row_nr_1} S) + (c#{col_letter_1} E) $);%\\n\", ]\n      yield [ 'tex', \"\\\\coordinate (quad #{quad} top right)     at ($ (r#{row_nr_1} S) + (c#{col_letter_2} W) $);%\\n\", ]\n      yield [ 'tex', \"\\\\coordinate (quad #{quad} bottom left)   at ($ (r#{row_nr_2} N) + (c#{col_letter_1} E) $);%\\n\", ]\n      yield [ 'tex', \"\\\\coordinate (quad #{quad} bottom right)  at ($ (r#{row_nr_2} N) + (c#{col_letter_2} W) $);%\\n\", ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_cellgrid_events = ( me ) ->\n  return null unless me.cellgrid\n  #.........................................................................................................\n  ### TAINT code duplication; use iterator ###\n  for [ col_letter_1, col_nr_1, ] from @_walk_column_letters_and_numbers me, 'short'\n    col_nr_2      = col_nr_1 + 1\n    ### TAINT don't use EXCJSCC directly ###\n    col_letter_2  = ( EXCJSCC.n2l col_nr_2 ).toLowerCase()\n    for row_nr_1 from @_walk_row_numbers me, 'short'\n      row_nr_2  = row_nr_1 + 1\n      quad = \"#{col_letter_1}#{row_nr_1}\"\n      yield [ 'tex', \"\\\\draw[ red, line width = 0.2mm ] (quad #{quad} top    left)  -- (quad #{quad} top    right); % Quad a1 top\\n\",    ]\n      yield [ 'tex', \"\\\\draw[ red, line width = 0.2mm ] (quad #{quad} top    left)  -- (quad #{quad} bottom left);  % Quad a1 left\\n\",   ]\n      yield [ 'tex', \"\\\\draw[ red, line width = 0.2mm ] (quad #{quad} bottom left)  -- (quad #{quad} bottom right); % Quad a1 bottom\\n\", ]\n      yield [ 'tex', \"\\\\draw[ red, line width = 0.2mm ] (quad #{quad} top    right) -- (quad #{quad} bottom right); % Quad a1 right\\n\",  ]\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_debugging_events = ( me ) ->\n  @_ensure_joint_coordinates  me\n  #.........................................................................................................\n  ### TAINT code duplication; use iterator ###\n  for [ col_letter, col_nr, ] from @_walk_column_letters_and_numbers me, 'long'\n    for row_nr from @_walk_row_numbers me, 'long'\n      joint = \"#{col_letter}#{row_nr}\"\n      yield [ 'tex', \"\\\\node[ color = gray ] at ($(joint #{joint})+(2mm,2mm)$) {{\\\\mktsStyleCode{}#{joint}}}; \", ]\n      yield [ 'tex', \"\\\\node[ color = gray, shape = circle, draw ] at (joint #{joint}) {};%\\n\", ]\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\n# ENSURERS\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_unitvector = ( me ) ->\n  @unitwidth  me, me.default.unitwidth   unless me.unitwidth?\n  @unitheight me, me.default.unitheight  unless me.unitheight?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_joint_coordinates = ( me ) ->\n  return null if me.joint_coordinates?\n  @_ensure_quadwidths   me\n  @_ensure_quadheights  me\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_gridwidth = ( me ) ->\n  return null if me.gridwidth?\n  me.gridwidths = me.default.gridwidth\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_gridheight = ( me ) ->\n  return null if me.gridheight?\n  me.gridheights = me.default.gridheight\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_quadwidths = ( me ) ->\n  return null if me.quadwidths?\n  @_ensure_gridwidth  me\n  me.quadwidths = ( me.default.quadwidth for col_nr in [ 1 .. me.gridwidth + 1 ] )\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_ensure_quadheights = ( me ) ->\n  return null if me.quadheights?\n  @_ensure_gridheight me\n  me.quadheights = ( me.default.quadheight for col_nr in [ 1 .. me.gridheight + 1 ] )\n  return null\n\n\n#===========================================================================================================\n# ITERATORS\n#-----------------------------------------------------------------------------------------------------------\n@_walk_column_letters_and_numbers = ( me, mode ) ->\n  @_ensure_gridwidth me\n  delta = if mode is 'short' then 0 else 1\n  for col_nr in [ 1 .. me.gridwidth + delta ]\n    ### TAINT don't use EXCJSCC directly ###\n    col_letter  = ( EXCJSCC.n2l col_nr ).toLowerCase()\n    yield [ col_letter, col_nr, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_row_numbers = ( me, mode ) ->\n  @_ensure_gridheight me\n  delta = if mode is 'short' then 0 else 1\n  yield row_nr for row_nr in [ 1 .. me.gridheight + delta ]\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n_stackerr = ( ref, message, error = null ) ->\n  ###\n  Prepends local error message to the original one so we get more informative traces. Usage:\n\n  ```\n  try\n    ...\n  catch error\n    throw _stackerr error, \"(MKTS/TABLE 6358) ... new message ...\"\n  ```\n  ###\n  message = \"(MKTS/TABLE##{ref}) #{message}\"\n  if error?\n    error.message = \"#{message}\\n#{error.message}\"\n  else\n    ### TAINT elide current line from stack trace ###\n    error = new Error message\n  return error\n"
  ]
}