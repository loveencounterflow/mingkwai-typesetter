{
  "version": 3,
  "file": "md-reader-typofix.js",
  "sourceRoot": "..",
  "sources": [
    "src/md-reader-typofix.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;;;;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAQA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAnB5B;;;;;;;;;EA2BA,IAAC,CAAA,YAAD,GAWE,CAAA;;;;;;;;;;;IAAA,WAAA,EAAa,CAAE,SAAF,EAA2D,GAA3D,CAAb;IACA,UAAA,EAAa,CAAE,0BAAF,EAA2D,OAA3D;EADb,EAtCF;;;EA2CA,IAAC,CAAA,OAAD,GAAW,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACT,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,GAAA,EAAA;IAAA,CAAA,GAAI;AACJ;IAAA,KAAA,WAAA;MAAU,CAAE,QAAF,EAAY,WAAZ;MACR,IAAA,CAAgC,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAhC;QAAA,QAAA,GAAW,CAAE,QAAF,EAAX;;MACA,KAAA,0CAAA;;QACE,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,OAAV,EAAmB,WAAnB;MADN;IAFF;AAIA,WAAO;EANE;AA3CX",
  "sourcesContent": [
    "\n\n\n\n############################################################################################################\n# njs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/MD-READER/TYPOFIX'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#-----------------------------------------------------------------------------------------------------------\n# D                         = require 'pipedreams'\n# $                         = D.remit.bind D\n#...........................................................................................................\n# MKTS                      = require './main'\n\n#-----------------------------------------------------------------------------------------------------------\n@replacements =\n  # Simple typographic replacements\n  #\n  # (c) (C) → ©\n  # (tm) (TM) → ™\n  # (r) (R) → ®\n  # +- → ±\n  # (p) (P) -> §\n  # ... → … (also ?.... → ?.., !.... → !..)\n  # ???????? → ???, !!!!! → !!!, `,,` → `,`\n  # -- → &ndash;, --- → &mdash;\n  'copyright': [ /// \\( c \\) ///gi,                                       '©',      ]\n  'ellipsis':  [ /// ( ^ | [ ^ . ] ) [.]{3} ( $ | [ ^ . ] ) ///gi,        '$1…$2',  ]\n\n\n#-----------------------------------------------------------------------------------------------------------\n@rewrite = ( S, text ) ->\n  R = text\n  for name, [ matchers, replacement, ] of @replacements\n    matchers = [ matchers, ] unless CND.isa_list matchers\n    for matcher in matchers\n      R = R.replace matcher, replacement\n  return R\n\n\n\n\n\n\n"
  ]
}