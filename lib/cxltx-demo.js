// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, CXLTX, P, _, alert, badge, debug, echo, help, info, method_name, rpr, urge, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'CXLTX/DEMO';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  echo = CND.echo.bind(CND);

  // 4661697 - 2797018

  //-----------------------------------------------------------------------------------------------------------
  this.as_here_x_ref = function(x, x_unit, delta, delta_unit) {
    var R;
    x = (parseFloat(x)) / 186467.9;
    delta = parseFloat(delta);
    if (!CND.isa_number(x)) {
      throw new Error(`expected a number, got ${rpr(x)}`);
    }
    if (!CND.isa_number(delta)) {
      throw new Error(`expected a number, got ${rpr(delta)}`);
    }
    if (x_unit !== 'sp') {
      throw new Error(`expected 'sp', got ${rpr(x_unit)}`);
    }
    if (delta_unit !== 'mm') {
      throw new Error(`expected 'mm', got ${rpr(delta_unit)}`);
    }
    x = x - delta;
    R = x.toFixed(1);
    if (R === '-0.0') {
      return '0.0';
    } else {
      return R;
    }
  };

  //-----------------------------------------------------------------------------------------------------------
  if (module.parent == null) {
    CXLTX = this;
    [_, _, method_name, ...P] = process.argv;
    // debug '34474', P
    echo(CXLTX[method_name](...P));
  }

}).call(this);

//# sourceMappingURL=cxltx-demo.js.map
