{
  "version": 3,
  "file": "xnchr.js",
  "sourceRoot": "..",
  "sources": [
    "src/xnchr.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'XNCR_CHR'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n@CHR                      = require 'coffeenode-chr'\n\n\n### TAINT there should be a unified way to obtain copies of libraries with certain settings that\n  differ from that library's default options. Interface could maybe sth like this:\n  ```\n  settings              = _.deep_copy CHR.options\n  settings[ 'input' ]   = 'xncr'\n  XNCR_CHR              = OPTIONS.new_library CHR, settings\n  ```\n###\n\n### TAINT additional settings silently ignored ###\n\n#-----------------------------------------------------------------------------------------------------------\nsettings              = { input: 'xncr' }\n#...........................................................................................................\n@analyze              = ( glyph     ) -> @CHR.analyze          glyph, settings\n@as_csg               = ( glyph     ) -> @CHR.as_csg           glyph, settings\n@as_chr               = ( glyph     ) -> @CHR.as_chr           glyph, settings\n@as_uchr              = ( glyph     ) -> @CHR.as_uchr          glyph, settings\n@as_cid               = ( glyph     ) -> @CHR.as_cid           glyph, settings\n@as_rsg               = ( glyph     ) -> @CHR.as_rsg           glyph, settings\n@as_sfncr             = ( glyph     ) -> @CHR.as_sfncr         glyph, settings\n@as_fncr              = ( glyph     ) -> @CHR.as_fncr          glyph, settings\n# @_as_xncr             = ( csg, cid  ) -> @CHR._as_xncr         csg, cid\n@is_inner_glyph       = ( glyph     ) -> ( @as_csg glyph ) in [ 'u', 'jzr', ]\n@chr_from_cid_and_csg = ( cid, csg  ) -> @CHR.as_chr cid, { csg: csg }\n@cid_range_from_rsg   = ( rsg       ) -> @CHR.cid_range_from_rsg rsg\n\n#-----------------------------------------------------------------------------------------------------------\n@chrs_from_text = ( text ) -> @CHR.chrs_from_text    text, settings\n\n#-----------------------------------------------------------------------------------------------------------\n@normalize = ( glyph ) ->\n  rsg = @as_rsg glyph\n  cid = @as_cid glyph\n  csg = if rsg is 'u-pua' then 'jzr' else 'u'\n  return @chr_from_cid_and_csg cid, csg\n\n\n\n\n\n"
  ]
}