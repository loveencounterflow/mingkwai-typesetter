{
  "version": 3,
  "file": "mkts-table-layout-reader-sqy.js",
  "sourceRoot": "..",
  "sources": [
    "src/mkts-table-layout-reader-sqy.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS/TABLE/LAYOUT-READER/SQY'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\njr                        = JSON.stringify\n# ### TAINT cyclic dependency ###\n# MKTS_TABLE                = require './mkts-table'\nMKTS_TABLE_API            = require './mkts-table-api'\nSQY                       = require 'sqy'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@read_layout = ( S, L, event, source ) ->\n  ### TAINT take advantage of Nearley's streaming API ###\n  ### TAINT simplify dispatcher code ###\n  # debug '77129', source\n  R = null\n  #.........................................................................................................\n  for t in SQY.parse source\n    whisper '88373', jr t\n    #.......................................................................................................\n    switch t.type\n      when 'cheat'\n        alert '25521', \"cheating\"\n        MKTS_TABLE = require './mkts-table'\n        MKTS_TABLE.columnwidth  R, '20'\n        MKTS_TABLE.rowheight    R, '20'\n        continue\n      when 'create_layout'\n        R = MKTS_TABLE_API.create_layout S, event.meta, t.id\n        continue\n    #.......................................................................................................\n    unless R?\n      throw new Error \"µ9893 must create layout before #{t.type}\"\n    #.......................................................................................................\n    switch t.type\n      when 'set_grid'\n        MKTS_TABLE_API.set_grid R, t.size\n        continue\n      when 'set_debug'\n        MKTS_TABLE_API.set_debug R, t.value\n        continue\n      when 'assignment'\n        warn '25521', \"ignoring #{t.type}\"\n        continue\n    #.......................................................................................................\n    unless R.grid?\n      throw new Error \"µ9894 must set grid before #{t.type}\"\n    #.......................................................................................................\n    switch t.type\n      when 'create_field'\n        MKTS_TABLE_API.create_field R, t.id, t.selector\n        continue\n      when 'select_fields'\n        warn '25521', \"ignoring #{t.type}\"\n        continue\n      when 'set_ctx_border'\n        warn '25521', \"ignoring #{t.type}\"\n        continue\n      when 'set_sel_border'\n        MKTS_TABLE_API.set_borders R, t.selectors, t.edges, t.style\n        continue\n      when 'set_ctx_alignment'\n        warn '25521', \"ignoring #{t.type}\"\n        continue\n      when 'set_sel_alignment'\n        warn '25521', \"ignoring #{t.type}\"\n        continue\n    #.......................................................................................................\n    warn \"unhandled t type #{rpr t.type}\"\n  #.........................................................................................................\n  if R.fails.length > 0\n    alert '44093', fail for fail in R.fails\n    throw new Error \"µ9894 detected fails\"\n  #.........................................................................................................\n  return R\n\n# #-----------------------------------------------------------------------------------------------------------\n# @get_mkts_table_description_and_sandbox = ( S, L, event ) ->\n#   ### This method makes the format-defining names of the MKTS Table Formatter available at the top level,\n#   curried so that the current context (`me`) that contains the processed details as defined so far as well\n#   as data on the general typesetting context. All names are templating functions, such that each may be\n#   called as `grid'4x4'`, `merge'[a1]..[a4]'` and so on from the source within the MKTS document where the\n#   table is being defined. ###\n#   me      = MKTS_TABLE._new_description S\n#   me.meta = event[ 3 ]\n#   ### ... more typesetting detail attached here ... ###\n#   #.........................................................................................................\n#   f = =>\n#     @copy                 = ( raw_parts ) => @_API_copy S, L, me, raw_parts.join ''\n#     #.........................................................................................................\n#     @name                 = ( raw_parts ) -> MKTS_TABLE.name                  me, raw_parts.join ''\n#     @debug                = ( raw_parts ) -> MKTS_TABLE.debug                 me, raw_parts.join ''\n#     @grid                 = ( raw_parts ) -> MKTS_TABLE.grid                  me, raw_parts.join ''\n#     @fill_gap             = ( raw_parts ) -> MKTS_TABLE.fill_gap              me, raw_parts.join ''\n#     @padding              = ( raw_parts ) -> MKTS_TABLE.padding               me, raw_parts.join ''\n#     @margin               = ( raw_parts ) -> MKTS_TABLE.margin                me, raw_parts.join ''\n#     @unitwidth            = ( raw_parts ) -> MKTS_TABLE.unitwidth             me, raw_parts.join ''\n#     @unitheight           = ( raw_parts ) -> MKTS_TABLE.unitheight            me, raw_parts.join ''\n#     @columnwidth          = ( raw_parts ) -> MKTS_TABLE.columnwidth           me, raw_parts.join ''\n#     @rowheight            = ( raw_parts ) -> MKTS_TABLE.rowheight             me, raw_parts.join ''\n#     @fieldcells           = ( raw_parts ) -> MKTS_TABLE.fieldcells            me, raw_parts.join ''\n#     @fieldborder          = ( raw_parts ) -> MKTS_TABLE.fieldborder           me, raw_parts.join ''\n#     @fieldalignvertical   = ( raw_parts ) -> MKTS_TABLE.fieldalignvertical    me, raw_parts.join ''\n#     @fieldalignhorizontal = ( raw_parts ) -> MKTS_TABLE.fieldalignhorizontal  me, raw_parts.join ''\n#     return @\n#   #.........................................................................................................\n#   return [ me, ( f.apply {} ), ]\n\n\n\n\n\n\n\n"
  ]
}