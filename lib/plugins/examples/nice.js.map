{
  "version": 3,
  "file": "nice.js",
  "sourceRoot": "../../..",
  "sources": [
    "src/plugins/examples/nice.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/TEX-WRITER/PLUGINS/MY-PLUGIN'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nMD_READER                 = require '../../md-reader'\nhide                      = MD_READER.hide.bind        MD_READER\ncopy                      = MD_READER.copy.bind        MD_READER\nstamp                     = MD_READER.stamp.bind       MD_READER\nunstamp                   = MD_READER.unstamp.bind     MD_READER\nselect                    = MD_READER.select.bind      MD_READER\nis_hidden                 = MD_READER.is_hidden.bind   MD_READER\nis_stamped                = MD_READER.is_stamped.bind  MD_READER\n#...........................................................................................................\n### plugins must use pipestreams ###\nPS                        = require 'pipestreams'\n{ $, $async, }            = PS\n\n#-----------------------------------------------------------------------------------------------------------\n@$nice = ( S, settings ) ->\n  ### kludge to generate prefixed name; this will be changed in next version ###\n  nice = \"#{settings.prefix}-nice\"\n  return $ ( event, send ) =>\n    [ ..., meta, ] = event\n    if select event, '(', nice\n      send [ '.', 'text', \"(NICE:\", ( copy meta ), ]\n      send stamp event\n    else if select event, ')', nice\n      send [ '.', 'text', \":NICE)\", ( copy meta ), ]\n      send stamp event\n    else\n      send event\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$binomen = ( S, settings ) ->\n  ### kludge to generate prefixed name; this will be changed in next version ###\n  binomen     = \"#{settings.prefix}-binomen\"\n  collector   = []\n  within_tag  = false\n  return $ ( event, send ) =>\n    [ ..., meta, ] = event\n    if select event, '(', binomen\n      within_tag = true\n      send stamp event\n    else if select event, ')', binomen\n      within_tag = false\n      text = collector.join ''\n      send [ '.', 'mktscript', \"<em>#{text}</em>\", ( copy meta ), ]\n      collector.length = 0\n      send stamp event\n    else if within_tag and select event, '.', 'text'\n      collector.push event[ 2 ]\n    else\n      send event\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@main = ( S, settings ) ->\n  # pipeline = []\n  # pipeline.push @$nice    S, settings\n  # pipeline.push @$binomen S, settings\n  # return PS.pull pipeline...\n  # return @$nice  S, settings\n  return @$binomen  S, settings\n\n@kw_call = ( ctx, settings ) ->\n  { S, event, }     = ctx\n  [ ..., meta, ]    = event\n  R                 = []\n  R.push [ '.', 'text', \"helo from #{__filename}\\n\\n\", ( copy meta ), ]\n  R.push [ '.', 'mktscript', \"an MKTScript sample: (<tt>!!!MKTScript!!!</tt>)\", ( copy meta ), ]\n  #.........................................................................................................\n  return R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  ]
}