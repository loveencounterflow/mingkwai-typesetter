{
  "version": 3,
  "file": "tex-writer-aux.js",
  "sourceRoot": "..",
  "sources": [
    "src/tex-writer-aux.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/TEX-WRITER/COLUMNS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPS                        = require 'pipestreams'\n{ $, $async, }            = PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@fetch_aux_data = ( S, handler ) ->\n  Z           = {}\n  source      = PS.new_file_source S.layout_info[ 'aux-locator' ]\n  on_stop     = PS.new_event_collector 'stop', ->\n    help \"read data from #{S.layout_info[ 'aux-locator' ]}\"\n    handler null, Z\n  pipeline    = []\n  pipeline.push source\n  pipeline.push PS.$split()\n  # pipeline.push PS.$show()\n  pipeline.push @$read_linerefs     S, Z\n  pipeline.push @$read_xypositions  S, Z\n  pipeline.push on_stop.add PS.$drain()\n  PS.pull pipeline...\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$read_linerefs = ( S, Z ) ->\n  ### Reads references made by package `lineno` provided reference labels start with `mkts-linenr-` ###\n  ### \\newlabel{mkts-linenr-foobar}{{\\getpagewiselinenumber {5}}{1}} ###\n  pattern = /^\\\\newlabel\\{mkts-linenr-([^}]+)\\}\\{\\{\\\\getpagewiselinenumber \\{([\\d]+)\\}\\}\\{([\\d]+)\\}\\}$/\n  target  = Z.linenrs = {}\n  return $ ( line, send ) ->\n    match                         = line.match pattern\n    return send line unless match?\n    [ _, name, linenr, pagenr, ]  = match\n    pagenr                        = parseInt pagenr, 10\n    linenr                        = parseInt linenr, 10\n    target[ name ]                = { pagenr, linenr, }\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$read_xypositions = ( S, Z ) ->\n  ### Reads (x,y) position references made by package `zref-savepos` ###\n  ### \\zref@newlabel{mkts-pos-foobar}{\\posx{2797018}\\posy{50159889}} ###\n  pattern = /^\\\\zref@newlabel\\{([^}]+)\\}\\{\\\\posx\\{([\\d]+)\\}\\\\posy\\{([\\d]+)\\}\\}$/\n  target  = Z.xypositions = {}\n  return $ ( line, send ) ->\n    match                         = line.match pattern\n    return send line unless match?\n    [ _, name, x, y, ]            = match\n    x                             = parseInt x, 10\n    y                             = parseInt y, 10\n    target[ name ]                = { x, y, }\n    return null\n\n\n# unless module.parent?\n#   pattern = /^\\\\zref@newlabel\\{([^}]+)\\}\\{\\\\posx\\{([\\d]+)\\}\\\\posy\\{([\\d]+)\\}\\}$/\n#   debug ( '\\\\zref@newlabel{mkts-pos-foobar}{\\\\posx{2797018}\\\\posy{50159889}}' ).match pattern\n\n\n\n"
  ]
}