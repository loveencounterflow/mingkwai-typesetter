{
  "version": 3,
  "file": "mkts-table-layout-reader-coffee.js",
  "sourceRoot": "..",
  "sources": [
    "src/mkts-table-layout-reader-coffee.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS/TEX-WRITER/MKTSTABLE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nECS                       = require './eval-cs'\n### TAINT cyclic dependency ###\nMKTS_TABLE                = require './mkts-table'\nTW_MKTS_TABLE             = require './tex-writer-mkts-table'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@read_layout = ( S, L, event, source ) ->\n  [ R, sandbox, ] = @get_mkts_table_description_and_sandbox S, L, event\n  try\n    ECS.evaluate source, { language: 'coffee', sandbox, }\n  catch error\n    warn \"when trying to evaluate CS source text for <mkts-table> an error occurred\"\n    throw error\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@get_mkts_table_description_and_sandbox = ( S, L, event ) ->\n  ### This method makes the format-defining names of the MKTS Table Formatter available at the top level,\n  curried so that the current context (`me`) that contains the processed details as defined so far as well\n  as data on the general typesetting context. All names are templating functions, such that each may be\n  called as `grid'4x4'`, `merge'[a1]..[a4]'` and so on from the source within the MKTS document where the\n  table is being defined. ###\n  me      = MKTS_TABLE._new_description S\n  ### ... more typesetting detail attached here ... ###\n  #.........................................................................................................\n  f = =>\n    @copy                 = ( raw_parts ) => TW_MKTS_TABLE._API_copy S, L, me, raw_parts.join ''\n    #.........................................................................................................\n    @name                 = ( raw_parts ) -> MKTS_TABLE.name                  me, raw_parts.join ''\n    @debug                = ( raw_parts ) -> MKTS_TABLE.debug                 me, raw_parts.join ''\n    @grid                 = ( raw_parts ) -> MKTS_TABLE.grid                  me, raw_parts.join ''\n    @background_gap       = ( raw_parts ) -> MKTS_TABLE.background_gap        me, raw_parts.join ''\n    @padding              = ( raw_parts ) -> MKTS_TABLE.padding               me, raw_parts.join ''\n    @margin               = ( raw_parts ) -> MKTS_TABLE.margin                me, raw_parts.join ''\n    @unitwidth            = ( raw_parts ) -> MKTS_TABLE.unitwidth             me, raw_parts.join ''\n    @unitheight           = ( raw_parts ) -> MKTS_TABLE.unitheight            me, raw_parts.join ''\n    @columnwidth          = ( raw_parts ) -> MKTS_TABLE.columnwidth           me, raw_parts.join ''\n    @rowheight            = ( raw_parts ) -> MKTS_TABLE.rowheight             me, raw_parts.join ''\n    @fieldcells           = ( raw_parts ) -> MKTS_TABLE.fieldcells            me, raw_parts.join ''\n    @fieldborder          = ( raw_parts ) -> MKTS_TABLE.fieldborder           me, raw_parts.join ''\n    @fieldalignvertical   = ( raw_parts ) -> MKTS_TABLE.fieldalignvertical    me, raw_parts.join ''\n    @fieldalignhorizontal = ( raw_parts ) -> MKTS_TABLE.fieldalignhorizontal  me, raw_parts.join ''\n    return @\n  #.........................................................................................................\n  return [ me, ( f.apply {} ), ]\n\n\n\n\n\n\n\n\n"
  ]
}