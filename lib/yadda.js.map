{
  "version": 3,
  "file": "yadda.js",
  "sourceRoot": "..",
  "sources": [
    "src/yadda.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,cAAA,EAAA;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B,EAP5B;;;EASA,MAAA,GAA4B,CAAA,EAT5B;;;EAWA,cAAA,GACE;IAAA,EAAA,EACE;MAAA,KAAA,EAAsB,CAAtB;;MAEA,KAAA,EAAsB,YAFtB;MAGA,kBAAA,EAAsB,CAHtB;MAIA,kBAAA,EAAsB,EAJtB;MAKA,mBAAA,EAAsB,CALtB;MAMA,mBAAA,EAAsB,CANtB;MAOA,MAAA,EAAsB,OAPtB;;MASA,MAAA,EAAsB,GAAG,CAAC,OAAJ,CAAY,EAAZ,EAAgB,CAAhB,CATtB;MAUA,MAAA,EAAsB,IAVtB;IAAA,CADF;IAYA,EAAA,EACE;MAAA,KAAA,EAAsB,CAAtB;;MAEA,KAAA,EAAsB,YAFtB;MAGA,kBAAA,EAAsB,CAHtB;MAIA,kBAAA,EAAsB,EAJtB;MAKA,mBAAA,EAAsB,CALtB;MAMA,mBAAA,EAAsB,CANtB;MAOA,MAAA,EAAsB,OAPtB;;MASA,MAAA,EAAsB,GAAG,CAAC,OAAJ,CAAY,EAAZ,EAAgB,CAAhB,CATtB;MAUA,MAAA,EAAsB,IAVtB;IAAA,CAbF;IAwBA,EAAA,EAAI;EAxBJ,EAZF;;;EAuCA,IAAC,CAAA,WAAD,GAAe,QAAA,CAAA,CAAA;AACb,QAAA;IAAA,CAAA,GAAI,CAAE,CAAE,OAAA,CAAQ,YAAR,CAAF,CAAA,CAAyB;MAAE,KAAA,EAAO,EAAT;MAAa,IAAA,EAAM;IAAnB,CAAzB,CAAF,CAAuD,CAAC;IAC5D,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,OAAV,EAAmB,GAAnB;IACJ,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,QAAV,EAAoB,GAApB;AACJ,WAAO;EAJM,EAvCf;;;EA8CA,IAAC,CAAA,UAAD,GACE;IAAA,EAAA,EAA0B,OAAA,CAAQ,aAAR,CAA1B;IACA,EAAA,EAA0B,OAAA,CAAQ,sBAAR,CAD1B;IAEA,EAAA,EAA0B,IAAC,CAAA,WAAW,CAAC,IAAb,CAAkB,IAAlB;EAF1B,EA/CF;;;EAoDA,IAAC,CAAA,QAAD,GAAY,QAAA,CAAE,CAAF,CAAA;AACV,QAAA,KAAA,EAAA;;MAAA,CAAC,CAAC,OAAc;;IAChB,KAAA,mCAAgB,eAAA,eAAmB;;MACnC,CAAC,CAAC,KAAc,KAAK,CAAC,MAAN,GAAe;;AAC2B,WAAM,KAAK,CAAC,MAAN,GAAe,CAAC,CAAC,EAAvB;MAA1D,KAAK,CAAC,IAAN,CAAW,IAAC,CAAA,UAAY,CAAA,CAAC,CAAC,IAAF,CAAb,CAAsB,cAAgB,CAAA,CAAC,CAAC,IAAF,CAAtC,CAAX;IAA0D;AAC1D,WAAO,KAAO,CAAA,CAAC,CAAC,EAAF,GAAO,CAAP;EALJ,EApDZ;;;EA4DA,IAAO,qBAAP;IACE,KAAA,GAAQ;IACR,KAAA,CAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe;MAAE,IAAA,EAAM;IAAR,CAAf,CAAZ;IACA,KAAA,CAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe;MAAE,IAAA,EAAM,IAAR;MAAc,EAAA,EAAI;IAAlB,CAAf,CAAZ;IACA,KAAA,CAAM,IAAN,EAAY,KAAK,CAAC,QAAN,CAAe;MAAE,IAAA,EAAM,IAAR;MAAc,EAAA,EAAI;IAAlB,CAAf,CAAZ,EAJF;;AA5DA",
  "sourcesContent": [
    "\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/YADDA'\ndebug                     = CND.get_logger 'debug',     badge\n#...........................................................................................................\ncaches                    = {}\n#...........................................................................................................\nlorem_settings            =\n  la:\n    count:                1                       # Number of words, sentences, or paragraphs to generate.\n    # units:                'sentences'             # Generate words, sentences, or paragraphs.\n    units:                'paragraphs'            # Generate words, sentences, or paragraphs.\n    sentenceLowerBound:   5                       # Minimum words per sentence.\n    sentenceUpperBound:   15                      # Maximum words per sentence.\n    paragraphLowerBound:  3                       # Minimum sentences per paragraph.\n    paragraphUpperBound:  7                       # Maximum sentences per paragraph.\n    format:               'plain'                 # Plain text or html\n    # words:                ['ad', 'dolor', ... ]   # Custom word dictionary. Uses dictionary.words (in lib/dictionary.js) by default.\n    random:               CND.get_rnd 42, 3       # A PRNG function. Uses Math.random by default\n    suffix:               '\\n'                    # The character to insert between paragraphs. Defaults to default EOL for your OS.\n  ja:\n    count:                1                       # Number of words, sentences, or paragraphs to generate.\n    # units:                'sentences'             # Generate words, sentences, or paragraphs.\n    units:                'paragraphs'            # Generate words, sentences, or paragraphs.\n    sentenceLowerBound:   5                       # Minimum words per sentence.\n    sentenceUpperBound:   15                      # Maximum words per sentence.\n    paragraphLowerBound:  3                       # Minimum sentences per paragraph.\n    paragraphUpperBound:  7                       # Maximum sentences per paragraph.\n    format:               'plain'                 # Plain text or html\n    # words:                ['ad', 'dolor', ... ]   # Custom word dictionary. Uses dictionary.words (in lib/dictionary.js) by default.\n    random:               CND.get_rnd 42, 3       # A PRNG function. Uses Math.random by default\n    suffix:               '\\n'                    # The character to insert between paragraphs. Defaults to default EOL for your OS.\n  zh: '20c'\n\n#-----------------------------------------------------------------------------------------------------------\n@generate_zh = ->\n  R = ( ( require 'chinesegen' ) { count: 50, freq: true, } ).text\n  R = R.replace /[？！]/g, '。'\n  R = R.replace /。{2,}/g, '。'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@generators =\n  la:                       require 'lorem-ipsum'\n  ja:                       require 'lorem-ipsum-japanese'\n  zh:                       @generate_zh.bind @\n\n#-----------------------------------------------------------------------------------------------------------\n@generate = ( Q ) ->\n  Q.lang       ?= 'la'\n  cache         = caches[ Q.lang ]?= []\n  Q.nr         ?= cache.length + 1\n  cache.push @generators[ Q.lang ] lorem_settings[ Q.lang ] while cache.length < Q.nr\n  return cache[ Q.nr - 1 ]\n\n############################################################################################################\nunless module.parent?\n  YADDA = @\n  debug 'la', YADDA.generate { lang: 'la', }\n  debug 'ja', YADDA.generate { lang: 'ja', nr: 1 }\n  debug 'zh', YADDA.generate { lang: 'zh', nr: 1 }\n\n\n\n\n\n"
  ]
}