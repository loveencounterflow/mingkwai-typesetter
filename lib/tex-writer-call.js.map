{
  "version": 3,
  "file": "tex-writer-call.js",
  "sourceRoot": "..",
  "sources": [
    "src/tex-writer-call.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nPATH                      = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'mkts/tex-writer-call'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nD                         = require '../../../pipedreams'\n{ $ }                     = D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nMD_READER                 = require './md-reader'\nhide                      = MD_READER.hide.bind        MD_READER\ncopy                      = MD_READER.copy.bind        MD_READER\nstamp                     = MD_READER.stamp.bind       MD_READER\nselect                    = MD_READER.select.bind      MD_READER\nis_hidden                 = MD_READER.is_hidden.bind   MD_READER\nis_stamped                = MD_READER.is_stamped.bind  MD_READER\nthrow_all_errors          = yes\n\n\n# [ ')',\n#   'code',\n#   [ 'keep-lines' ],\n#   { line_nr: 92, col_nr: 129, markup: '```' } ]\n# 00:03 mkts/tex-writer-call  âš™  33733 [ '.',\n#   'hr2',\n#   { slash: true,\n#     above: 0,\n#     one: '-',\n#     two: '',\n#     three: '',\n#     below: 1,\n#     stop: '/' },\n#   { line_nr: 130,\n#     col_nr: 131,\n#     markup: '/--------------------------------------------/' } ]\n\nf = ->\n  return await g()\n\n#-----------------------------------------------------------------------------------------------------------\n@$call = ( S ) =>\n  reference_path = S.layout_info[ 'source-home' ]\n  # self = @\n  return $async ( event, send, end ) =>\n    #.......................................................................................................\n    if event? and select event, '!', 'call'\n      [ type, name, parameters, meta, ]   = event\n      [ module_path, method_path, P..., ] = parameters\n      lines                               = null\n      locator                             = PATH.join reference_path, module_path\n      [ crumbs..., method_name, ]         = method_path.split '.'\n      send [ '.', 'text', \"76765 module:#{rpr module_path}\\n\",        ( copy meta ), ]\n      send [ '.', 'text', \"76765 method: #{rpr method_path}\\n\",       ( copy meta ), ]\n      send [ '.', 'text', \"76765 P: #{rpr P}\\n\",                      ( copy meta ), ]\n      ### TAINT could result be streamed? ###\n      #.....................................................................................................\n      try\n        module  = require locator\n        module  = module[ crumb ] for crumb in crumbs\n      catch error\n        alert '98987', \"when trying to resolve #{crumbs.join '.'}\"\n        alert '98987', \"starting with module #{rpr locator}\"\n        alert '98987', \"an error occurred at path component #{rpr crumb}\"\n        throw error if throw_all_errors\n        send [ '.', 'warning', error.message, ( copy meta ), ]\n        return send.done()\n      #.....................................................................................................\n      try\n        # process.chdir '/home/flow/io/mingkwai-rack/texts/800-demo-actions/mojikura3-model'\n        lines   = await module[ method_name ] P...\n      #.....................................................................................................\n      catch error\n        alert '98987', \"when trying to call method #{rpr method_name}\"\n        alert '98987', \"from module #{rpr locator}##{crumbs.join '.'}\"\n        alert '98987', \"with arguments #{rpr P}\"\n        alert '98987', \"an error occurred:\"\n        alert '98987', error.message\n        throw error if throw_all_errors\n        send [ '.', 'warning', error.message, ( copy meta ), ]\n        return send.done()\n      #.....................................................................................................\n      for line in lines\n        line = line + '\\n' unless line.endsWith '\\n'\n        send [ '.', 'text', line, ( copy meta ), ]\n      send.done()\n    #.......................................................................................................\n    else\n      send event\n      send.done()\n    #.......................................................................................................\n    end() if end?\n    return null\n\n\n"
  ]
}