{
  "version": 3,
  "file": "tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\njoin                      = njs_path.join\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\nafter                     = suspend.after\n# eventually                = suspend.eventually\n### TAINT experimentally using `later` in place of `setImmediate` ###\nlater                     = suspend.immediately\n#...........................................................................................................\ntest                      = require 'guy-test'\n#...........................................................................................................\nD                         = require 'pipedreams'\n{ $, $async, }            = D\n#...........................................................................................................\n### TAINT to be replaced by global `MK.TS`: ###\nMKTS                      = require './main'\n\n############################################################################################################\n### This is a mock for the `MK` global normally instantiated by `mingkwai/lib/main.js`. ###\nunless global.MK?\n  require '../../mingkwai'\n  # CND.dir MK\n  # CND.dir MK.TS\n  # global.MK                 = {}\n  # global.MK.TS              = require './main'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\nshow_events = ( probe, events ) ->\n  whisper probe\n  echo \"[\"\n  for event in events\n    echo \"    #{JSON.stringify event}\"\n  echo \"    ]\"\n\n#-----------------------------------------------------------------------------------------------------------\ncopy_regex_non_global = ( re ) ->\n  flags = ( if re.ignoreCase then 'i' else '' ) + \\\n          ( if re.multiline  then 'm' else '' ) +\n          ( if re.sticky     then 'y' else '' )\n  return new RegExp re.source, flags\n\n#-----------------------------------------------------------------------------------------------------------\nlist_from_match = ( match ) ->\n  return null unless match?\n  R = Array.from match\n  R.splice 0, 1\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nmatch_first = ( patterns, probe ) ->\n  for pattern in patterns\n    return R if ( R = probe.match pattern )?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nnice_text_rpr = ( text ) ->\n  ### Ad-hoc method to print out text in a readable, CoffeeScript-compatible, triple-quoted way. Line breaks\n  (`\\\\n`) will be shown as line breaks, so texts should not be as spaghettified as they appear with\n  JSON.stringify (the last line break of a string is, however, always shown in its symbolic form so it\n  won't get swallowed by the CoffeeScript parser). Code points below U+0020 (space) are shown as\n  `\\\\x00`-style escapes, taken up less space than `\\u0000` escapes while keeping things explicit. All\n  double quotes will be prepended with a backslash. ###\n  R = text\n  R = R.replace /[\\x00-\\x09\\x0b-\\x19]/g, ( $0 ) ->\n    cid_hex = ( $0.codePointAt 0 ).toString 16\n    cid_hex = '0' + cid_hex if cid_hex.length is 1\n    return \"\\\\x#{cid_hex}\"\n  R = R.replace /\"/g, '\\\\\"'\n  R = R.replace /\\n$/g, '\\\\n'\n  R = '\\n\"\"\"' + R + '\"\"\"'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@call_transform = ( stream, transform, handler ) ->\n  ### Given a `stream`, `transform` and a callback `handler`, pipe stream into transform, `D.$collect` all\n  results into a list, and call handler with that list as second argument. The callback is mandatory even\n  if the stream is synchronous because it may be paused, in which case you'll want to resume it at a\n  convenient point in time. ###\n  throw new Error \"expected 2 or 3 arguments, got #{arity}\" unless 2 <= ( arity = arguments.length ) <= 3\n  stream\n    .pipe transform()\n    .pipe @$collect ( result, send ) =>\n      return handler null, result\n  return null\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.action_patterns match action macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(.>><<)>>\",[\".\",\"\",\"\",\"\"]]\n    [\"<<(.>>xxx<<)>>\",[\".\",\"\",\"xxx\",\"\"]]\n    [\"<<(.>>some code<<)>>\",[\".\",\"\",\"some code\",\"\"]]\n    [\"abc<<(.>>4 + 3<<)>>def\",[\".\",\"\",\"4 + 3\",\"\"]]\n    [\"<<(:>><<)>>\",[\":\",\"\",\"\",\"\"]]\n    [\"<<(:>>xxx<<)>>\",[\":\",\"\",\"xxx\",\"\"]]\n    [\"<<(:>>some code<<)>>\",[\":\",\"\",\"some code\",\"\"]]\n    [\"abc<<(:>>4 + 3<<)>>def\",[\":\",\"\",\"4 + 3\",\"\"]]\n    [\"abc<<(:>>bitfield \\\\>> 1 <<)>>def\",[\":\",\"\",\"bitfield \\\\>> 1 \",\"\"]]\n    [\"abc<<(:>>bitfield >\\\\> 1 <<)>>def\",[\":\",\"\",\"bitfield >\\\\> 1 \",\"\"]]\n    [\"abc<<(:js>>4 + 3<<)>>def\",[\":\",\"js\",\"4 + 3\",\"\"]]\n    [\"abc<<(.js>>4 + 3<<)>>def\",[\".\",\"js\",\"4 + 3\",\"\"]]\n    [\"abc<<(:js>>4 + 3<<:js)>>def\",[\":\",\"js\",\"4 + 3\",\":js\"]]\n    [\"abc<<(.js>>4 + 3<<.js)>>def\",[\".\",\"js\",\"4 + 3\",\".js\"]]\n    [\"abc<<(:js>>4 + 3<<:)>>def\",null]\n    [\"abc<<(.js>>4 + 3<<.)>>def\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS.MACRO_ESCAPER.action_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.region_patterns match region macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(>><<)>>\",[\"(\",\"\",\"\"]]\n    [\"<<(bold>><<)>>\",[\"(\",\"bold\",\"\"]]\n    [\"<<(bold>><<bold)>>\",[\"(\",\"bold\",\"\"]]\n    [\"<<(foo>><<bar)>>\",[\"(\",\"foo\",\"\"]]\n    [\"yadda <<(foo>>grom<<bar)>> blah <<)>>\",[\"(\",\"foo\",\"\"]]\n    [\"yadda <<bar)>> blah <<)>>\",[\"\",\"bar\",\")\"]]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS.MACRO_ESCAPER.region_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.bracketed_raw_patterns matches raw macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<<...raw material...>>>\",[\"<\",\"...raw material...\"]]\n    [\"<<<...raw material...>>>\\nxxx\",[\"<\",\"...raw material...\"]]\n    [\"<<(.>>some code<<)>>\",null]\n    [\"<<<>>>\",[\"<\",\"\"]]\n    [\"abcdef<<<\\\\XeLaTeX{}>>>ghijklm\",[ '<', '\\u001088\\u0011eLaTeX{}' ]]\n    [\"abcdef<<<123\\\\>>>0>>>ghijklm\",[ '<', '123\\u001062\\u0011>>0' ]]\n    [\"abcdef\\\\<<<123>>>ghijklm\",null]\n    [\"abcdef<\\\\<<123>>>ghijklm\",null]\n    [\"abcdef<<\\\\<123>>>ghijklm\",null]\n    [\"abcdef<<<123>>\\\\>ghijklm\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS.MACRO_ESCAPER.bracketed_raw_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape.escape_chrs S, probe\n    result  = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.command_and_value_patterns matches command macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<!>>\",[\"!\",\"\"]]\n    [\"<<!name>>\",[\"!\",\"name\"]]\n    [\"abc<<!name>>def\",[\"!\",\"name\"]]\n    [\"abc<<!n>me>>def\",[\"!\",\"n>me\"]]\n    [\"abc<<!n>\\\\>me>>def\",[ '!', 'n>\\u001062\\u0011me' ]]\n    [\"abc<<!n\\\\>me>>def\",[ '!', 'n\\u001062\\u0011me' ]]\n    [\"abc\\\\<<!nme>>def\",null]\n    [\"<<$>>\",[\"$\",\"\"]]\n    [\"<<$name>>\",[\"$\",\"name\"]]\n    [\"abc<<$name>>def\",[\"$\",\"name\"]]\n    [\"abc<<$n>me>>def\",[\"$\",\"n>me\"]]\n    [\"abc<<$n>\\\\>me>>def\",[ '$', 'n>\\u001062\\u0011me' ]]\n    [\"abc<<$n\\\\>me>>def\",[ '$', 'n\\u001062\\u0011me' ]]\n    [\"abc\\\\<<$nme>>def\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS.MACRO_ESCAPER.command_and_value_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    S           = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe       = MKTS.MACRO_ESCAPER.escape.escape_chrs S, probe\n    result      = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.illegal_patterns matches consecutive unescaped LPBs\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"helo world\",null]\n    [\"helo \\\\<< world\",null]\n    [\"helo <\\\\< world\",null]\n    [\"helo << world\",[\"<<\"]]\n    [\"helo >> world\",[\">>\"]]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS.MACRO_ESCAPER.illegal_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    S           = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe       = MKTS.MACRO_ESCAPER.escape.escape_chrs S, probe\n    result      = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.end_command_patterns matches end command macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!end>> and some there\",[\"some text here \"]]\n    [\"some text here <<!end>>\",[\"some text here \"]]\n    [\"<<!end>>\",[\"\"]]\n    [\"\",null]\n    [\"<<!end>> and some there\",[\"\"]]\n    [\"\\\\<<!end>> and some there\",null]\n    [\"some text here \\\\<<!end>> and some there\",null]\n    [\"some text here <<!end>\\\\> and some there\",null]\n    ]\n  patterns = MKTS.MACRO_ESCAPER.end_command_patterns\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.truncate_text_at_end_command_macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!end>> and some there\",[\"some text here \",23]]\n    [\"some text here <<!end>>\",[\"some text here \",8]]\n    [\"<<!end>>\",[\"\",8]]\n    [\"\",[\"\",0]]\n    [\"<<!end>> and some there\",[\"\",23]]\n    [\"\\\\<<!end>> and some there\",[\"\\\\<<!end>> and some there\",0]]\n    [\"some text here \\\\<<!end>> and some there\",[\"some text here \\\\<<!end>> and some there\",0]]\n    [\"some text here <<!end>\\\\> and some there\",[\"some text here <<!end>\\\\> and some there\",0]]\n    [\"\\n\\nfoo bar\\n\\n\\n\\n<<!end>>\\ndiscarded\",[\"\\n\\nfoo bar\\n\\n\\n\\n\",18]]\n    [\"\\n\\nfoo bar\\n\\n\\n\\n<<!end>>\\ndiscarded<<!end>>\\ndiscarded as well\",[\"\\n\\nfoo bar\\n\\n\\n\\n\",44]]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    result = MKTS.MACRO_ESCAPER.escape.truncate_text_at_end_command_macro null, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.html_comments\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here and some there\",\"some text here and some there\",[]]\n    [\"some text here<!-- omit this --> and some there\",\"some text here\\u0015comment0\\u0013 and some there\",[{\"key\":\"comment0\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"}]]\n    [\"some text here\\\\<!-- omit this --> and some there\",\"some text here\\u001060\\u0011!-- omit this --> and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd<<<some raw content>>>efg\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S           = MKTS.MACRO_ESCAPER.initialize_state {}\n    text_result = probe\n    text_result = MKTS.MACRO_ESCAPER.escape.escape_chrs               S, text_result\n    text_result = MKTS.MACRO_ESCAPER.escape.html_comments S, text_result\n    help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.bracketed_raw_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here<<!foo>>and some there\",\"some text here<<!foo>>and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd\\u0015raw0\\u0013efg\",[{\"key\":\"raw0\",\"markup\":\"<\",\"raw\":\"some raw content\",\"parsed\":null}]]\n    [\"abcd\\\\<<<some raw content>>>efg\",'abcd\\u001060\\u0011<<some raw content>>>efg',[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S           = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe       = MKTS.MACRO_ESCAPER.escape.escape_chrs S, probe\n    text_result = MKTS.MACRO_ESCAPER.escape.bracketed_raw_macros S, probe\n    help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.action_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(.>><<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"\",\"parsed\":null}]]\n    [\"<<(.>><<.)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"\",\"parsed\":null}]]\n    [\"<<(.>>xxx<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"xxx\",\"parsed\":null}]]\n    [\"<<(.>>xxx<<.)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"xxx\",\"parsed\":null}]]\n    [\"<<(.>>some code<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}]]\n    [\"<<(.>>some code<<.)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}]]\n    [\"abc<<(.>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"<<(:>><<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"\",\"parsed\":null}]]\n    [\"<<(:>>xxx<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"xxx\",\"parsed\":null}]]\n    [\"<<(:>>some code<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}]]\n    [\"abc<<(:>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:>>bitfield \\\\>> 1 <<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"bitfield \\\\>> 1 \",\"parsed\":null}]]\n    [\"abc<<(:>>bitfield >\\\\> 1 <<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"bitfield >\\\\> 1 \",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(.js>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<:js)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(.js>>4 + 3<<.js)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<:)>>def\",\"abc<<(:js>>4 + 3<<:)>>def\",[]]\n    [\"abc<<(.js>>4 + 3<<.)>>def\",\"abc<<(.js>>4 + 3<<.)>>def\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS.MACRO_ESCAPER.initialize_state {}\n    text_result = MKTS.MACRO_ESCAPER.escape.action_macros S, probe\n    # log CND.white rpr probe\n    # urge rpr text_result\n    help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n  # debug '©ΤΓΘΤΝ', MKTS.MACRO_ESCAPER.action_and_region_patterns[ 0 ]\n  # debug '©ΤΓΘΤΝ', MKTS.MACRO_ESCAPER.action_and_region_patterns[ 1 ]\n  # T.fail 'not ready'\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.command_and_value_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!foo>> and some there\",\"some text here \\u0015command0\\u0013 and some there\",[{\"key\":\"command0\",\"markup\":\"!\",\"raw\":\"foo\",\"parsed\":null}]]\n    [\"some text here <<$foo>> and some there\",\"some text here \\u0015value0\\u0013 and some there\",[{\"key\":\"value0\",\"markup\":\"$\",\"raw\":\"foo\",\"parsed\":null}]]\n    [\"some text here \\\\<<!foo>> and some there\",'some text here \\u001060\\u0011<!foo>> and some there',[]]\n    [\"some text here \\\\<<$foo>> and some there\",'some text here \\u001060\\u0011<$foo>> and some there',[]]\n    [\"some text here<!-- omit this --> and some there\",\"some text here<!-- omit this --> and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd<<<some raw content>>>efg\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S           = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe       = MKTS.MACRO_ESCAPER.escape.escape_chrs S, probe\n    text_result = MKTS.MACRO_ESCAPER.escape.command_and_value_macros S, probe\n    help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n  done()\n\n# # # #-----------------------------------------------------------------------------------------------------------\n# # # @[ \"MKTS.MACRO_ESCAPER.escape 1\" ] = ( T, done ) ->\n# # #   probes_and_matchers = [\n# # #     [\"<<(multi-column 3>>\\nsome text here<!-- omit this --> and some there\\n<<)>>\\n<<(multi-column 2>>\\nThis text will appear in two-column<!-- omit this --> layout.\\n<!--some code-->\\n<<(:>>some code<<)>>\\n<<)>>\\n<<!end>>\\n<<!command>><<(:action>><<)>>\",\"\\u0015region4\\u0013\\nsome text here\\u0015comment0\\u0013 and some there\\n\\u0015region5\\u0013\\n\\u0015region6\\u0013\\nThis text will appear in two-column\\u0015comment1\\u0013 layout.\\n\\u0015comment2\\u0013\\n\\u0015action3\\u0013\\n\\u0015region7\\u0013\\n\",[{\"key\":\"comment0\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"},{\"key\":\"comment1\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"},{\"key\":\"comment2\",\"markup\":null,\"raw\":\"some code\",\"parsed\":\"some code\"},{\"key\":\"action3\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null},{\"key\":\"region4\",\"markup\":\"multi-column 3\",\"raw\":\"<<(multi-column 3>>\",\"parsed\":null},{\"key\":\"region5\",\"markup\":\"multi-column 3\",\"raw\":\"<<)>>\",\"parsed\":null},{\"key\":\"region6\",\"markup\":\"multi-column 2\",\"raw\":\"<<(multi-column 2>>\",\"parsed\":null},{\"key\":\"region7\",\"markup\":\"multi-column 2\",\"raw\":\"<<)>>\",\"parsed\":null}]]\n# # #     ]\n# # #   for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n# # #     S = MKTS.MACRO_ESCAPER.initialize_state {}\n# # #     text_result = MKTS.MACRO_ESCAPER.escape S, probe\n# # #     help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n# # #     T.eq text_result, text_matcher\n# # #     T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n# # #   done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape 2\" ] = ( T, done ) ->\n  probes_and_matchers = [[\n    \"\"\"<<(multi-column 3>>\n      some text here<!-- HTML comment 1 --> and some there\n      <<)>>\n      <<(multi-column 2>>\n      This text will appear in two-column<!-- HTML comment 2 --> layout.\n      <<(:>>some code<<)>>\n      <<)>>\n      <<!end>>\n      <<!command>><<(:action>><<)>>\n      \"\"\"\n    ,\n      \"\"\"\\x15region3\\x13\n      some text here\\x15comment0\\x13 and some there\n      \\x15region5\\x13\n      \\x15region4\\x13\n      This text will appear in two-column\\x15comment1\\x13 layout.\n      \\x15action2\\x13\n      \\x15region6\\x13\\n\"\"\"\n    ,\n      [\n        {\"key\":\"comment0\",\"markup\":null,\"raw\":\" HTML comment 1 \",\"parsed\":\"HTML comment 1\"}\n        {\"key\":\"comment1\",\"markup\":null,\"raw\":\" HTML comment 2 \",\"parsed\":\"HTML comment 2\"}\n        {\"key\":\"action2\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}\n        {\"key\":\"region3\",\"markup\":\"(\",\"raw\":\"multi-column 3\",\"parsed\":null}\n        {\"key\":\"region4\",\"markup\":\"(\",\"raw\":\"multi-column 2\",\"parsed\":null}\n        {\"key\":\"region5\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null}\n        {\"key\":\"region6\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null}\n        ]\n      ]]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS.MACRO_ESCAPER.initialize_state {}\n    text_result = MKTS.MACRO_ESCAPER.escape S, probe\n    urge nice_text_rpr probe\n    info nice_text_rpr text_result\n    help JSON.stringify entry for entry in S.MACRO_ESCAPER[ 'registry' ]\n    T.eq text_result,             text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ],  registry_matcher\n  # T.fail \"not ready\"\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.$expand.$html_comments\" ] = ( T, done ) ->\n  probes_and_matchers = [[\n    \"\"\"<<(multi-column 3>>\n      some text here<!-- HTML comment 1 --> and some there\n      <<)>>\n      <<(multi-column 2>>\n      This text will appear in two-column<!-- HTML comment 2 --> layout.\n      <<(:>>some code<<)>>\n      <<)>>\n      <<!end>>\n      <<!command>><<(:action>><<)>>\n      \"\"\"\n    ,\n      [\n        [\".\",\"text\",\"\\u0015region3\\u0013\\nsome text here\",{}]\n        [\".\",\"comment\",\" HTML comment 1 \",{}]\n        [\".\",\"text\",\" and some there\\n\\u0015region5\\u0013\\n\\u0015region4\\u0013\\nThis text will appear in two-column\",{}]\n        [\".\",\"comment\",\" HTML comment 2 \",{}]\n        [\".\",\"text\",\" layout.\\n\\u0015action2\\u0013\\n\\u0015region6\\u0013\\n\",{}]\n      ]\n      ]]\n  for [ pre_probe, matcher, ] in probes_and_matchers\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape S, pre_probe\n    input   = D.stream_from_text probe\n    stream  = input\n      .pipe $ ( text, send ) =>\n        send [ '.', 'text', text, {}, ]\n    D.call_transform stream, ( => MKTS.MACRO_ESCAPER.$expand.$html_comments S ), ( error, result ) =>\n      log CND.white JSON.stringify event for event in result\n      T.eq result, matcher\n      done()\n    input.resume()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.$expand.$action_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [[\n    \"\"\"some text with <<(:>>vocal action<<)>>.\n      <<(.js>>and( \"a silent action\" )<<.js)>>\n      \"\"\"\n  ,\n    [\n      [\".\",\"text\",\"some text with \",{}]\n      [\".\",\"action\",\"vocal action\",{\"mode\":\"vocal\",\"language\":\"coffee\"}]\n      [\".\",\"text\",\".\\n\",{}]\n      [\".\",\"action\",\"and( \\\"a silent action\\\" )\",{\"mode\":\"silent\",\"language\":\"js\"}]\n      ]\n    ]]\n  for [ pre_probe, matcher, ] in probes_and_matchers\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape S, pre_probe\n    input   = D.stream_from_text probe\n    stream  = input\n      .pipe $ ( text, send ) =>\n        send [ '.', 'text', text, {}, ]\n    D.call_transform stream, ( => MKTS.MACRO_ESCAPER.$expand.$action_macros S ), ( error, result ) =>\n      log CND.white JSON.stringify event for event in result\n      T.eq result, matcher\n      # T.fail \"not ready\"\n      done()\n    input.resume()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.$expand.$raw_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    #.......................................................................................................\n    [ \"\"\"<<(multi-column 3>>\n      some text here<<<\\\\LaTeX{}>>> and some there\n      <<)>>\n      \"\"\"\n    ,\n    [\n      # [\".\",\"text\",\"\\u0015region1\\u0013\\nsome text here\",{}]\n      # [\".\",\"raw\",\"\\\\LaTeX{}\",{}]\n      # [\".\",\"text\",\" and some there\\n\\u0015region2\\u0013\",{}]\n      [\".\",\"text\",\"\\u0015region1\\u0013\\nsome text here\",{}]\n      [\".\",\"raw\",\"\\u001076\\u0011aTeX{}\",{}]\n      [\".\",\"text\",\" and some there\\n\\u0015region2\\u0013\",{}]\n      ]\n    ],\n    #.......................................................................................................\n    [ \"\"\"some text here\n      <<<\\\\dotfill{}>>>\n      and some there\n      \"\"\"\n    ,\n    [\n      [\".\",\"text\",\"some text here\\n\",{}]\n      [\".\",\"raw\",\"\\u0010100\\u0011otfill{}\",{}]\n      [\".\",\"text\",\"\\nand some there\",{}]\n      ]\n    ],\n    #.......................................................................................................\n    ]\n  #.........................................................................................................\n  count = 0\n  for [ pre_probe, matcher, ] in probes_and_matchers\n    info '\\n' + pre_probe\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape S, pre_probe\n    input   = D.stream_from_text probe\n    stream  = input\n      .pipe $ ( text, send ) =>\n        send [ '.', 'text', text, {}, ]\n    D.call_transform stream, ( => MKTS.MACRO_ESCAPER.$expand.$raw_macros S ), ( error, result ) =>\n      log CND.white JSON.stringify event for event in result\n      T.eq result, matcher\n      # T.fail \"not ready\"\n      count += +1\n      done() if count >= probes_and_matchers.length\n    input.resume()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.$expand.$command_and_value_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [[\n    \"\"\"<<(multi-column 3>>\n      a command <<!LATEX>> and a value <<$pagenr>>.\n      <<)>>\n      \"\"\"\n  ,\n    [\n      [\".\",\"text\",\"\\u0015region0\\u0013\\na command \",{}]\n      [\"!\",\"LATEX\",null,{}]\n      [\".\",\"text\",\" and a value \",{}]\n      [\"$\",\"pagenr\",null,{}]\n      [\".\",\"text\",\".\\n\\u0015region1\\u0013\",{}]\n      ]\n    ]]\n  for [ pre_probe, matcher, ] in probes_and_matchers\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape S, pre_probe\n    # debug '©ΖΡΤΣΓ', S\n    input   = D.stream_from_text probe\n    stream  = input\n      .pipe $ ( text, send ) =>\n        send [ '.', 'text', text, {}, ]\n    D.call_transform stream, ( => MKTS.MACRO_ESCAPER.$expand.$command_and_value_macros S ), ( error, result ) =>\n      log CND.white JSON.stringify event for event in result\n      T.eq result, matcher\n      # T.fail \"not ready\"\n      done()\n    input.resume()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse accepts dot patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '.',     [ '.', null,   null, ], ]\n    [ '.p',    [ '.', 'p',    null, ], ]\n    [ '.text', [ '.', 'text', null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.MD_READER.FENCES.parse probe\n    T.eq ( MKTS.MD_READER.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse accepts empty fenced patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    # [ '<>', [ '<', null, '>', ], ]\n    # [ '{}', [ '{', null, '}', ], ]\n    # [ '[]', [ '[', null, ']', ], ]\n    [ '()', [ '(', null, ')', ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.MD_READER.FENCES.parse probe\n    T.eq ( MKTS.MD_READER.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse accepts unfenced named patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ 'document',       [ null, 'document',     null, ], ]\n    [ 'singlecolumn',   [ null, 'singlecolumn', null, ], ]\n    [ 'code',           [ null, 'code',         null, ], ]\n    [ 'blockquote',     [ null, 'blockquote',   null, ], ]\n    [ 'em',             [ null, 'em',           null, ], ]\n    [ 'xxx',            [ null, 'xxx',          null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.MD_READER.FENCES.parse probe\n    T.eq ( MKTS.MD_READER.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse accepts fenced named patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    # [ '<document>',     [ '<', 'document',     '>', ], ]\n    # [ '{singlecolumn}', [ '{', 'singlecolumn', '}', ], ]\n    # [ '{code}',         [ '{', 'code',         '}', ], ]\n    # [ '[blockquote]',   [ '[', 'blockquote',   ']', ], ]\n    [ '(em)',           [ '(', 'em',           ')', ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.MD_READER.FENCES.parse probe\n    T.eq ( MKTS.MD_READER.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse rejects empty string\" ] = ( T, done ) ->\n  T.throws \"pattern must be non-empty, got ''\", ( -> MKTS.MD_READER.FENCES.parse '' )\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse rejects non-matching fences etc\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"(xxx}\",\"unmatched fence in '(xxx}'\"]\n    [\".)\",\"fence '.' can not have right fence, got '.)'\"]\n    [\".p)\",\"fence '.' can not have right fence, got '.p)'\"]\n    [\"(xxx\",\"unmatched fence in '(xxx'\"]\n    [\"(\",\"unmatched fence in '('\"]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    try\n      debug '©ΒΩΦΥΨ', JSON.stringify [ probe, MKTS.MD_READER.FENCES.parse probe ]\n    catch error\n      warn '©ΒΩΦΥΨ', JSON.stringify [ probe, error[ 'message' ], ]\n    T.throws matcher, ( -> MKTS.MD_READER.FENCES.parse probe )\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.FENCES.parse accepts non-matching fences when so configured\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '(em)',           [ '(', 'em',           ')', ], ]\n    [ 'em)',            [ null, 'em',           ')', ], ]\n    [ '(em',            [ '(', 'em',           null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.MD_READER.FENCES.parse probe\n    T.eq ( MKTS.MD_READER.FENCES.parse probe, symmetric: no ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.TRACKER.new_tracker().track rejects unregistered pattern\" ] = ( T, done ) ->\n  track = MKTS.MD_READER.TRACKER.new_tracker '(code)', '(em)'\n  T.throws \"untracked pattern '(code-span)'\", ( => track.within '(code-span)' )\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MD_READER.TRACKER.new_tracker (short comprehensive test)\" ] = ( T, done ) ->\n  track = MKTS.MD_READER.TRACKER.new_tracker '(code-span)', '(em)'\n  probes_and_matchers = [\n    [[\"(\",\"code-span\"],[true,false]]\n    [[\"(\",\"em\"],[true,true]]\n    [[\".\",\"text\"],[true,true]]\n    [[\")\",\"em\"],[true,false]]\n    [[\".\",\"text\"],[true,false]]\n    [[\")\",\"code-span\"],[false,false]]\n    [[\".\",\"text\"],[false,false]]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    track probe\n    within_code_span  = track.within '(code-span)'\n    within_em         = track.within '(em)'\n    help JSON.stringify [ probe, [ within_code_span, within_em, ], ]\n    T.eq ( track.within '(code-span)' ), matcher[ 0 ]\n    T.eq ( track.within '(em)'        ), matcher[ 1 ]\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (1)\" ] = ( T, done ) ->\n  # settings  = bare: yes\n  probe     = \"\"\"123 `abc<<(:>>vocal action<<)>>def` 456\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\"(\",\"document\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"text\",\"123 \",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\"(\",\"code-span\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"abc\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"action\",\"vocal action\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"mode\":\"vocal\",\"language\":\"coffee\",\"hidden\":true,\"stamped\":true}]\n    [\".\",\"warning\",\"action on line 1: vocal is not defined\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"mode\":\"vocal\",\"language\":\"coffee\"}]\n    [\".\",\"text\",\"def\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\")\",\"code-span\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\" 456\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\")\",\"document\",null,{}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (2)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  # probe     = \"\"\"abc<<(:js>>f( 42 );<<:js)>>def\"\"\"\n  probe     = \"\"\"abc<<(:js>>42;<<:js)>>def\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\".\",\"text\",\"abc\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"action\",\"42;\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"mode\":\"vocal\",\"language\":\"js\",\"hidden\":true,\"stamped\":true}]\n    [\".\",\"text\",\"42\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"mode\":\"vocal\",\"language\":\"js\"}]\n    [\".\",\"text\",\"def\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (3)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"abc\\\\<<(:js\\\\>>f( 42 );\\\\<<:js)\\\\>>def\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\".\",\"text\",\"abc\\\\<<(:js\\\\>>f( 42 );\\\\<<:js)\\\\>>def\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (4)\" ] = ( T, done ) ->\n  settings  = bare: no\n  probe     = \"\"\"<<!end>>\"\"\"\n  warn \"match remark?\"\n  matcher   = [\n    [\"(\",\"document\",null,{}]\n    [\".\",\"command\",\"empty-document\",{}]\n    [\")\",\"document\",null,{}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (5)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"<<!multi-column>>\"\"\"\n  warn \"should not contain `.p`\"\n  matcher   = [\n    [\"!\",\"multi-column\",[],{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (6)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    aaa\n    <<(multi-column>>\n    bbb\n    <<multi-column)>>\n    ccc\n    \"\"\"\n  warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"aaa\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\"(\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"text\",\"\\nbbb\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\")\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"text\",\"\\nccc\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (6a) auto-close dangling tags\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    aaa\n    <<(multi-column>>\n    bbb\n    \"\"\"\n  warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"aaa\\n\",{\"line_nr\":1,\"col_nr\":4,\"markup\":\"\"}]\n    [\"(\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":4,\"markup\":\"\"}]\n    [\".\",\"text\",\"\\nbbb\",{\"line_nr\":1,\"col_nr\":4,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":4,\"markup\":\"\"}]\n    [\"#\",\"resend\",\"`multi-column)`\",{\"badge\":\"$close_dangling_open_tags\",\"stamped\":true}]\n    [\")\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":4,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (7)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    她說：「你好。」\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"她說：「你好。」\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (8)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    A paragraph with *emphasis*.\n\n    A paragraph with **bold text**.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"A paragraph with \",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\"(\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n    [\".\",\"text\",\"emphasis\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\")\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"text\",\"A paragraph with \",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\"(\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n    [\".\",\"text\",\"bold text\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\")\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md: footnotes\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    Here is an inline footnote^[whose text appears at the point of insertion],\n    followed by a referenced footnote[^1].\n\n    [^1]: Referenced footnotes must use matching references.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"Here is an inline footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\"(\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\"whose text appears at the point of insertion\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\")\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\",\\nfollowed by a referenced footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\"(\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\"Referenced footnotes must use matching references.\",{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n    [\")\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    ]\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mkts_events_from_md probe, settings, resume\n    show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.TEX_WRITER.tex_from_md (1)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    A paragraph with *emphasis*.\n\n    A paragraph with **bold text**.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = \"\"\"\n    % begin of MD document\n    A paragraph with {\\\\mktsStyleItalic{}emphasis\\\\/}.\n\n    A paragraph with {\\\\mktsStyleBold{}bold text}.\n\n\n    % end of MD document\n\n    \"\"\"\n  step ( resume ) ->\n    result = yield MKTS.TEX_WRITER.tex_from_md probe, settings, resume\n    # echo result\n    T.eq matcher.trim(), result.trim()\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.TEX_WRITER.tex_from_md (2)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    The <<<\\\\LaTeX{}>>> Logo: `<<<\\\\LaTeX{}>>>` The <<<\\\\\\\\LaTeX{}>>> Logo: `<<<\\\\\\\\LaTeX{}>>>`\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = \"\"\"\n    % begin of MD document\n    The \\\\LaTeX{} Logo: {\\\\mktsStyleCode{}\\\\LaTeX{}} The \\\\\\\\LaTeX{} Logo: {\\\\mktsStyleCode{}\\\\\\\\LaTeX{}}\n\n\n    % end of MD document\\n\"\"\"\n  step ( resume ) ->\n    result = yield MKTS.TEX_WRITER.tex_from_md probe, settings, resume\n    # echo result\n    info nice_text_rpr result\n    T.eq matcher.trim(), result.trim()\n    # T.fail \"review `CLEANUP.$remove_empty_p_tags` in tex-writer; can't work w/ present event structure\"\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.TEX_WRITER.tex_from_md (3)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  # probe     = \"\"\"\n  #   ```keep-lines squish: yes\n  #   <<<\\\\dotfill>>>𠦝<<<\\\\dotfill>>>x\n  #   𠦝月 朝　　　　<<<\\\\hfill{}>>>1\n  #   ```\n  #   \"\"\"\n  probe     = \"\"\"\n    ```keep-lines squish: yes\n    1\n    2\n    <<<\\\\dotfill>>>\n    3\n    ```\n    \"\"\"\n  matcher   = \"\"\"\n    % begin of MD document\n    {\\\\mktsTightParagraphs{}1\\\\par\n    2\\\\par\n    \\\\dotfill\\\\null\\\\par\n    3\\\\par\n    }\n    % end of MD document\\n\"\"\"\n  step ( resume ) ->\n    result = yield MKTS.TEX_WRITER.tex_from_md probe, settings, resume\n    # echo result\n    info nice_text_rpr result\n    T.eq matcher.trim(), result.trim()\n    # T.fail \"review `CLEANUP.$remove_empty_p_tags` in tex-writer; can't work w/ present event structure\"\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mktscript_from_md (1)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    A paragraph with *emphasis*.\n\n    A paragraph with **bold text**.\n\n    Using <foo>HTML tags **inhibits** MD syntax</foo>.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = \"\"\"\n    1 █ (document\n    1 █ .text 'A paragraph with '\n    1 █ (em\n    1 █ .text 'emphasis'\n    1 █ )em\n    1 █ .text '.'\n    1 █ .p\n    3 █ .text 'A paragraph with '\n    3 █ (strong\n    3 █ .text 'bold text'\n    3 █ )strong\n    3 █ .text '.'\n    3 █ .p\n    5 █ .text 'Using '\n    5 █ (foo\n    5 █ .text 'HTML tags '\n    5 █ (strong\n    5 █ .text 'inhibits'\n    5 █ )strong\n    5 █ .text ' MD syntax'\n    5 █ )foo\n    5 █ .text '.'\n    5 █ .p\n    )document\n    # EOF\n    \"\"\"\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mktscript_from_md probe, settings, resume\n    echo result\n    T.eq matcher.trim(), result.trim()\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MKTSCRIPT_WRITER.mktscript_from_md (2) auto-close dangling tags\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    <<(multi-column>>\n\n    <div>B</div>\n\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = \"\"\"\n    1 █ (document\n    1 █ (multi-column\n    1 █ .p\n    1 █ (div\n    1 █ .text 'B'\n    1 █ )div\n    1 █ .p\n    #resend '`multi-column)`'\n    1 █ )multi-column\n    )document\n    # EOF\n    \"\"\"\n  step ( resume ) ->\n    result = yield MKTS.MKTSCRIPT_WRITER.mktscript_from_md probe, settings, resume\n    echo result\n    T.eq matcher.trim(), result.trim()\n    # T.fail \"not yet ready\"\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.escape.region_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<(>><<)>>\",\"some text here \\u0015region0\\u0013\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"(\",\"raw\":\"\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null}]]\n    [\"some text here <<(em>><<)>>\",\"some text here \\u0015region0\\u0013\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"(\",\"raw\":\"em\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null}]]\n    [\"some text here <<(em>>and some there<<)>><<(more>>markup<<)>>\",\"some text here \\u0015region0\\u0013and some there\\u0015region2\\u0013\\u0015region1\\u0013markup\\u0015region3\\u0013\",[{\"key\":\"region0\",\"markup\":\"(\",\"raw\":\"em\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\"(\",\"raw\":\"more\",\"parsed\":null},{\"key\":\"region2\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null},{\"key\":\"region3\",\"markup\":\")\",\"raw\":\"\",\"parsed\":null}]]\n    [\"some text here <<(em>>and some there<<foo)>>\",\"some text here \\u0015region0\\u0013and some there\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"(\",\"raw\":\"em\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\")\",\"raw\":\"foo\",\"parsed\":null}]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ], idx in probes_and_matchers\n    S = MKTS.MACRO_ESCAPER.initialize_state {}\n    text_result = MKTS.MACRO_ESCAPER.escape.region_macros S, probe\n    # debug '63746', idx\n    # debug '74623', CND.equals text_result, text_matcher\n    # log CND.white rpr probe\n    # urge rpr text_result\n    # help JSON.stringify [ probe, text_result, S.MACRO_ESCAPER[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S.MACRO_ESCAPER[ 'registry' ], registry_matcher\n  # T.fail 'not ready'\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.MACRO_ESCAPER.$expand.$region_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [[\n    \"\"\"<<(multi-column 3>>\n      some text here<!-- omit this --> and some there\n      <<)>>\n      <<(multi-column 2>>\n      This text will appear in two-column<!-- omit this --> layout.\n      <!--some code-->\n      <<(:>>some code<<)>>\n      <<)>>\n      <<!end>>\n      <<!command>><<(:action>><<)>>\n      \"\"\"\n  ,\n    [\n      [\"(\",\"multi-column 3\",null,{}]\n      [\".\",\"text\",\"\\nsome text here\\u0015comment0\\u0013 and some there\\n\",{}]\n      [\")\",\"multi-column 3\",null,{}]\n      [\".\",\"text\",\"\\n\",{}]\n      [\"(\",\"multi-column 2\",null,{}]\n      [\".\",\"text\",\"\\nThis text will appear in two-column\\u0015comment1\\u0013 layout.\\n\\u0015comment2\\u0013\\n\\u0015action3\\u0013\\n\",{}]\n      [\")\",\"multi-column 2\",null,{}]\n      [\".\",\"text\",\"\\n\",{}]\n      ]\n    ]]\n  for [ pre_probe, matcher, ] in probes_and_matchers\n    S       = MKTS.MACRO_ESCAPER.initialize_state {}\n    probe   = MKTS.MACRO_ESCAPER.escape S, pre_probe\n    input   = D.stream_from_text probe\n    stream  = input\n      .pipe $ ( text, send ) =>\n        send [ '.', 'text', text, {}, ]\n    D.call_transform stream, ( => MKTS.MACRO_ESCAPER.$expand.$region_macros S ), ( error, result ) =>\n      log CND.white JSON.stringify event for event in result\n      for event, idx in result\n        matcher_event = matcher[ idx ]\n        T.eq event, matcher_event\n      #   log idx, ( CND.equals event, matcher_event ), ( JSON.stringify event ), ( JSON.stringify matcher_event )\n      # T.fail \"not ready\"\n      done()\n    input.resume()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"TEX_WRITER_TYPOFIX.fix_typography_for_tex\" ] = ( T, done ) ->\n  S                                 = {}\n  { CACHE, OPTIONS, }               = require './options-and-cache'\n  TEX_WRITER_TYPOFIX                = require './tex-writer-typofix'\n  options_route                     = '../options.coffee'\n  options_locator                   = require.resolve njs_path.resolve __dirname, options_route\n  options_home                      = njs_path.dirname options_locator\n  S.options                         = OPTIONS.from_locator options_locator\n  format                            = ( text ) => text.trim().replace /\\x20/g, '∗'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [\"x𠇋𠇋𠇋x\",\"x{\\\\cjk{}{\\\\cnxb{}𠇋𠇋𠇋}}x\"]\n    [\"Brick tea ! \",\"Brick∗tea∗!\"]\n    [\"&\\\\#\",\"\\\\&\\\\textbackslash{}\\\\#\"]\n    [\"國\",\"{\\\\cjk{}{\\\\cn{}國}}\"]\n    [\"x國x\",\"x{\\\\cjk{}{\\\\cn{}國}}x\"]\n    [\"a 國 b\",\"a∗{\\\\cjk{}{\\\\cn{}國}}∗b\"]\n    [\"國 國\",\"{\\\\cjk{}{\\\\cn{}國}}∗{\\\\cjk{}{\\\\cn{}國}}\"]\n    [\"𠇋𠇋\",\"{\\\\cjk{}{\\\\cnxb{}𠇋𠇋}}\"]\n    [\"x𠇋x\",\"x{\\\\cjk{}{\\\\cnxb{}𠇋}}x\"]\n    [\"a 𠇋 b\",\"a∗{\\\\cjk{}{\\\\cnxb{}𠇋}}∗b\"]\n    [\"卩\",\"{\\\\cjk{}{\\\\cn{}{\\\\mktstfPush{-0.4}卩}}}\"]\n    [\"x卩x\",\"x{\\\\cjk{}{\\\\cn{}{\\\\mktstfPush{-0.4}卩}}}x\"]\n    [\"x 卩 x\",\"x∗{\\\\cjk{}{\\\\cn{}{\\\\mktstfPush{-0.4}卩}}}∗x\"]\n    [\"x 國𠇋國 x\",\"x∗{\\\\cjk{}{\\\\cn{}國}{\\\\cnxb{}𠇋}{\\\\cn{}國}}∗x\"]\n    [\"x 國卩國𠇋 x\",\"x∗{\\\\cjk{}{\\\\cn{}國{\\\\mktstfPush{-0.4}卩}國}{\\\\cnxb{}𠇋}}∗x\"]\n    [\"x𠇋𠇋𠇋x\",\"x{\\\\cjk{}{\\\\cnxb{}𠇋𠇋𠇋}}x\"]\n    [\"Brick tea 紧压茶都是用红茶 is delicious\",\"Brick∗tea∗{\\\\cjk{}{\\\\cn{}紧压茶都是用红茶}}∗is∗delicious\"]\n    [\"Brick tea\\n紧压茶都 是\\t\\n用红茶 is\\ndelicious\",\"Brick∗tea\\n{\\\\cjk{}{\\\\cn{}紧压茶都}}∗{\\\\cjk{}{\\\\cn{}是}}\\t\\n{\\\\cjk{}{\\\\cn{}用红茶}}∗is\\ndelicious\"]\n    [\"压茶卩红茶\",\"{\\\\cjk{}{\\\\cn{}压茶{\\\\mktstfPush{-0.4}卩}红茶}}\"]\n    [\"压茶𠇋卩红茶\",\"{\\\\cjk{}{\\\\cn{}压茶}{\\\\cnxb{}𠇋}{\\\\cn{}{\\\\mktstfPush{-0.4}卩}红茶}}\"]\n    [\"压茶𠇋卩\",\"{\\\\cjk{}{\\\\cn{}压茶}{\\\\cnxb{}𠇋}{\\\\cn{}{\\\\mktstfPush{-0.4}卩}}}\"]\n    [\"ℂ∪ℚ\",\"ℂ∪ℚ\"]\n    [\"&jzr#xe232;\",\"{\\\\cjk{}{\\\\cnjzr{}}}\"]\n    [\"& \\\\ #癶乛國\",'\\\\&∗\\\\textbackslash{}∗\\\\#{\\\\cjk{}{\\\\cn{}{\\\\mktstfRaise{-0.2}\\\\cnxBabel{}癶}}{\\\\cnjzr{}{\\\\mktstfPushRaise{0.5}{-0.2}}}{\\\\cn{}{\\\\mktstfRaise{-0.2}乛}國}}']\n    [\"Brick tea 紧压茶卩癶都是用红茶 is delicious\",\"Brick∗tea∗{\\\\cjk{}{\\\\cn{}紧压茶{\\\\mktstfPush{-0.4}卩}{\\\\mktstfRaise{-0.2}\\\\cnxBabel{}癶}}{\\\\cnjzr{}{\\\\mktstfRaise{0.1}\\\\cnxJzr{}}}{\\\\cn{}都是用红茶}}∗is∗delicious\"]\n    [\"x&#x65;x&morohashi#x12ab;x&jzr#xe000;x\",\"xex\\\\&morohashi\\\\#x12ab;x{\\\\cjk{}{\\\\cnjzr{}}}x\"]\n    ]\n  # warn \"missing `.p` inside `(multi-column)`\"\n  #.........................................................................................................\n  step ( resume ) ->\n    for [ probe, matcher, ] in probes_and_matchers\n      result  = yield TEX_WRITER_TYPOFIX.fix_typography_for_tex S, probe, resume\n      result  = format result\n      # echo '    ' + JSON.stringify [ probe, result, ]\n      T.eq ( format matcher ), result\n    done()\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\n# MAIN\n#-----------------------------------------------------------------------------------------------------------\n@_main = ( handler ) ->\n  test @, 'timeout': 2500\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n############################################################################################################\nunless module.parent?\n  # debug '0980', JSON.stringify ( Object.keys @ ), null '  '\n  include = [\n    #-------------------------------------------------------------------------------------------------------\n    # NOT WORKING\n    #-------------------------------------------------------------------------------------------------------\n    # \"MKTS.MACRO_ESCAPER.command_and_value_patterns matches command macro\"\n    # \"MKTS.MACRO_ESCAPER.escape.command_and_value_macros\"\n    # \"MKTS.MACRO_ESCAPER.$expand.$command_and_value_macros\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (1)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (2)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (3)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (4)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (5)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (6)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (6a) auto-close dangling tags\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (7)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md (8)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mkts_events_from_md: footnotes\"\n    # \"MKTS.MKTSCRIPT_WRITER.mktscript_from_md (1)\"\n    # \"MKTS.MKTSCRIPT_WRITER.mktscript_from_md (2) auto-close dangling tags\"\n    # \"MKTS.MACRO_ESCAPER.$expand.$region_macros\"\n\n    #-------------------------------------------------------------------------------------------------------\n    # WORKING\n    #-------------------------------------------------------------------------------------------------------\n    \"MKTS.MACRO_ESCAPER.bracketed_raw_patterns matches raw macro\"\n    \"MKTS.MACRO_ESCAPER.escape.bracketed_raw_macros\"\n    \"MKTS.MACRO_ESCAPER.$expand.$raw_macros\"\n    \"MKTS.MACRO_ESCAPER.action_patterns match action macros\"\n    \"MKTS.MACRO_ESCAPER.region_patterns match region macros\"\n    \"MKTS.MACRO_ESCAPER.illegal_patterns matches consecutive unescaped LPBs\"\n    \"MKTS.MACRO_ESCAPER.end_command_patterns matches end command macro\"\n    \"MKTS.MACRO_ESCAPER.escape.truncate_text_at_end_command_macro\"\n    \"MKTS.MACRO_ESCAPER.escape.html_comments\"\n    \"MKTS.MACRO_ESCAPER.escape.action_macros\"\n    \"MKTS.MACRO_ESCAPER.escape 2\"\n    \"MKTS.MACRO_ESCAPER.$expand.$html_comments\"\n    \"MKTS.MACRO_ESCAPER.$expand.$action_macros\"\n    \"MKTS.MD_READER.FENCES.parse accepts dot patterns\"\n    \"MKTS.MD_READER.FENCES.parse accepts empty fenced patterns\"\n    \"MKTS.MD_READER.FENCES.parse accepts unfenced named patterns\"\n    \"MKTS.MD_READER.FENCES.parse accepts fenced named patterns\"\n    \"MKTS.MD_READER.FENCES.parse rejects empty string\"\n    \"MKTS.MD_READER.FENCES.parse rejects non-matching fences etc\"\n    \"MKTS.MD_READER.FENCES.parse accepts non-matching fences when so configured\"\n    \"MKTS.MD_READER.TRACKER.new_tracker().track rejects unregistered pattern\"\n    \"MKTS.MD_READER.TRACKER.new_tracker (short comprehensive test)\"\n    \"MKTS.MACRO_ESCAPER.escape.region_macros\"\n    \"MKTS.TEX_WRITER.tex_from_md (1)\"\n    \"MKTS.TEX_WRITER.tex_from_md (2)\"\n    \"MKTS.TEX_WRITER.tex_from_md (3)\"\n    \"TEX_WRITER_TYPOFIX.fix_typography_for_tex\"\n    ]\n  @_prune()\n  @_main()\n\n"
  ]
}