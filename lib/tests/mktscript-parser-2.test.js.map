{
  "version": 3,
  "file": "mktscript-parser-2.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/mktscript-parser-2.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTSCRIPT-PARSER-2/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\njoin                      = ( x, joiner = '' ) -> x.join joiner\n# XREGEXP                   = require 'xregexp'\nMKTSP2                    = require '../experiments/mktscript-parser-2'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 30000\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"htmlish-tag-parser\" ] = ( T, done ) ->\n  S = {}\n  probes_and_matchers = [\n    'a line of text.'\n    'a line of *text*.'\n    'a line of ð£¥’text*.'\n    'a **strong** and a *less strong* emphasis.'\n    'a *normal and a **strong** emphasis*.'\n    # 'another *such and **such*** emphasis.'\n    # '***em* strong**.'\n    # '***strong** em*.'\n    # '***strong-em***.'\n    # 'lone *star'\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ], idx in probes_and_matchers\n    parser = MKTSP2.new_parser S, ( error, d ) ->\n      throw error if error?\n      whisper '#'.repeat 50\n      whisper '90283', jr d\n    parser.parse probe\n    # urge '36633', ( jr { name, attributes, } )\n    # T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n  # for [ probe, matcher, ] in probes_and_matchers\n  #   result = probe.match start_tag_pattern\n  #   try\n  #   catch error\n  #     # throw error\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"htmlish-tag-parser\"\n    ]\n  @_prune()\n  @_main()\n\n\n\n\n\n\n"
  ]
}