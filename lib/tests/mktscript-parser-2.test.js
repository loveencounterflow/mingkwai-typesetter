// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, MKTSP2, alert, badge, debug, echo, eq, help, include, info, join, jr, log, rpr, test, urge, warn, whisper,
    indexOf = [].indexOf;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'MKTSCRIPT-PARSER-2/TESTS';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  test = require('guy-test');

  eq = CND.equals;

  jr = JSON.stringify;

  //...........................................................................................................
  join = function(x, joiner = '') {
    return x.join(joiner);
  };

  // XREGEXP                   = require 'xregexp'
  MKTSP2 = require('../experiments/mktscript-parser-2');

  //-----------------------------------------------------------------------------------------------------------
  this._prune = function() {
    var name, ref, value;
    ref = this;
    for (name in ref) {
      value = ref[name];
      if (name.startsWith('_')) {
        continue;
      }
      if (indexOf.call(include, name) < 0) {
        delete this[name];
      }
    }
    return null;
  };

  //-----------------------------------------------------------------------------------------------------------
  this._main = function() {
    return test(this, {
      'timeout': 30000
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this["htmlish-tag-parser"] = function(T, done) {
    var S, i, idx, len, matcher, parser, probe, probes_and_matchers;
    S = {};
    probes_and_matchers = ['a line of text.', 'a line of *text*.', 'a line of ð£¥’text*.', 'a **strong** and a *less strong* emphasis.', 'a *normal and a **strong** emphasis*.'];
//.........................................................................................................
// 'another *such and **such*** emphasis.'
// '***em* strong**.'
// '***strong** em*.'
// '***strong-em***.'
// 'lone *star'
    for (idx = i = 0, len = probes_and_matchers.length; i < len; idx = ++i) {
      [probe, matcher] = probes_and_matchers[idx];
      parser = MKTSP2.new_parser(S, function(error, d) {
        if (error != null) {
          throw error;
        }
        whisper('#'.repeat(50));
        return whisper('90283', jr(d));
      });
      parser.parse(probe);
    }
    // urge '36633', ( jr { name, attributes, } )
    // T.eq result, matcher
    //.........................................................................................................
    return done();
  };

  // for [ probe, matcher, ] in probes_and_matchers
  //   result = probe.match start_tag_pattern
  //   try
  //   catch error
  //     # throw error

  //###########################################################################################################
  if (module.parent == null) {
    include = ["htmlish-tag-parser"];
    this._prune();
    this._main();
  }

}).call(this);

//# sourceMappingURL=mktscript-parser-2.test.js.map
