{
  "version": 3,
  "file": "object-validator.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/object-validator.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MK/TS/VALIDATOR/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\njoin                      = ( x, joiner = '' ) -> x.join joiner\nOVAL                      = require '../object-validator'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 30000\n\n#-----------------------------------------------------------------------------------------------------------\ntest_probe = ( T, validate, probe, matcher, do_compare = true ) ->\n  result = null\n  try\n    result = validate probe\n  catch error\n    if ( matcher is null )\n      ### TAINT opportunity for silent failure ###\n      help '36633', ( jr [ probe, matcher, ] ), ( CND.grey '#!!! ' + error.message[ .. 50 ] )\n      T.ok true\n    else\n      warn '36633', ( jr [ probe, matcher, ] )\n      T.fail \"unexpected error for probe #{rpr probe}: #{rpr error.message}\"\n    return null\n  urge '36633', ( jr [ probe, result, ] )\n  if do_compare\n    if ( matcher is null ) and ( result isnt null )\n      T.fail \"expected error but got result #{jr result}\"\n    else\n      T.eq result, matcher\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic\" ] = ( T, done ) ->\n  schema =\n    properties:\n      foo:  { type: 'integer', }\n      bar:  { type: 'boolean', }\n    required: [ 'foo', 'bar', ]\n    additionalProperties: false\n  #.........................................................................................................\n  probes_and_matchers = [\n    [{\"foo\":\"1\",\"bar\":\"true\",\"baz\":\"true\"},null]\n    [{\"foo\":\"1.1\",\"bar\":\"f\",\"baz\":\"true\"},null]\n    [{},null]\n    [{\"foo\":1,\"bar\":true},{\"foo\":1,\"bar\":true}]\n    [{\"foo\":\"1\",\"bar\":\"true\"},{\"foo\":1,\"bar\":true}]\n    ]\n  #.........................................................................................................\n  validate = OVAL.new_validator schema\n  for [ probe, matcher, ] in probes_and_matchers\n    test_probe T, validate, probe, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"scale tag schema\" ] = ( T, done ) ->\n  schema =\n    postprocess: ( Q ) ->\n      Q.lines = true if Q.lines is ''\n      return Q\n    properties:\n      abs:    { type: 'number', }\n      rel:    { type: 'number', }\n      lines:  { type: [ 'boolean', 'string', ], }\n    additionalProperties: false\n    oneOf: [ { required: [ 'abs', ], }, { required: [ 'rel', ], }, ]\n  #.........................................................................................................\n  probes_and_matchers = [\n    [{\"abs\":\"0.8\"},{\"abs\":0.8}]\n    [{\"abs\":\"0.8\",\"lines\":\"\"},{\"abs\":0.8,\"lines\":true}]\n    [{\"rel\":\"0.8\"},{\"rel\":0.8}]\n    [{\"rel\":\"0.8\",\"lines\":\"\"},{\"rel\":0.8,\"lines\":true}]\n    [{\"lines\":\"\"},null]\n    [{\"rel\":\"1\",\"abs\":\"2\"},null]\n    ]\n  #.........................................................................................................\n  validate = OVAL.new_validator schema\n  for [ probe, matcher, ] in probes_and_matchers\n    test_probe T, validate, probe, matcher, true\n  #.........................................................................................................\n  done()\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"basic\"\n    \"scale tag schema\"\n    ]\n  @_prune()\n  @_main()\n\n\n\n\n\n\n"
  ]
}