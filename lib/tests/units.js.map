{
  "version": 3,
  "file": "units.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/units.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS/TABLE/UNITS/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\nUNITS                     = require '../mkts-table-units'\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 30000\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"UNITS.parse 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"1mm\",{\"value\":1,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"1.2mm\",{\"value\":1.2,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"0.3\\\\mktsLineheight\",{\"value\":0.3,\"unit\":\"\\\\mktsLineheight\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"123456.2mm\",{\"value\":123456.2,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"300mm\",{\"value\":300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" 300mm\",{\"value\":300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" 300 mm\",{\"value\":300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" 300 mm   \",{\"value\":300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"-1mm\",{\"value\":-1,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"-1.2mm\",{\"value\":-1.2,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"-0.3\\\\mktsLineheight\",{\"value\":-0.3,\"unit\":\"\\\\mktsLineheight\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"-123456.2mm\",{\"value\":-123456.2,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"-300mm\",{\"value\":-300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" -300mm\",{\"value\":-300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" -300 mm\",{\"value\":-300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\" -300 mm   \",{\"value\":-300,\"unit\":\"mm\",\"~isa\":\"MKTS/TABLE/quantity\"}]\n    [\"0.3\",null]\n    [\"-0.3\",null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    try\n      result = UNITS.parse probe\n    catch error\n      if ( matcher is null ) and ( error.message.match /unable to parse/ )?\n        # urge '36633', ( jr [ probe, matcher, ] )\n        T.ok true\n      else\n        T.fail \"unexpected error for probe #{rpr probe}: #{rpr error.message}\"\n      continue\n    # urge '36633', ( jr [ probe, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"UNITS.as_text 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"1mm\",\"1mm\"]\n    [\"1.2mm\",\"1.2mm\"]\n    [\"0.3\\\\mktsLineheight\",\"0.3\\\\mktsLineheight\"]\n    [\"123456.2mm\",\"123456.2mm\"]\n    [\"300mm\",\"300mm\"]\n    [\" 300mm\",\"300mm\"]\n    [\" 300 mm\",\"300mm\"]\n    [\" 300 mm   \",\"300mm\"]\n    ]\n  #.........................................................................................................\n  for [ probe_txt, matcher, ] in probes_and_matchers\n    try\n      probe   = UNITS.parse probe_txt\n      result  = UNITS.as_text probe\n    catch error\n      T.fail \"unexpected error for probe #{rpr probe_txt}: #{rpr error.message}\"\n      continue\n    # urge '36633', ( jr [ probe_txt, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"UNITS.as_text 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"1mm\",\"*\",2],\"2mm\"]\n    [[\"1.2mm\",\"*\",2],\"2.4mm\"]\n    [[\"0.3\\\\mktsLineheight\",\"*\",2],\"0.6\\\\mktsLineheight\"]\n    [[\"123456.2mm\",\"*\",2],\"246912.4mm\"]\n    [[\"300mm\",\"*\",2],\"600mm\"]\n    [[\" 300mm\",\"*\",2],\"600mm\"]\n    [[\" 300 mm\",\"*\",2],\"600mm\"]\n    [[\" 300 mm   \",\"*\",2],\"600mm\"]\n    ]\n  #.........................................................................................................\n  for [ probes, matcher, ] in probes_and_matchers\n    [ unit_probe_txt, operator_probe, factor_probe, ] = probes\n    unit_probe                                        = UNITS.parse unit_probe_txt\n    try\n      result  = UNITS.as_text unit_probe, operator_probe, factor_probe\n    catch error\n      T.fail \"unexpected error for probe #{rpr probes}: #{rpr error.message}\"\n      continue\n    urge '36633', ( jr [ probes, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"UNITS.as_text 3\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"1mm\",\"*\",2],\"2mm\"]\n    [[\"1.2mm\",\"*\",2],\"2.4mm\"]\n    [[\"0.3\\\\mktsLineheight\",\"*\",2],\"0.6\\\\mktsLineheight\"]\n    [[\"123456.2mm\",\"*\",2],\"246912.4mm\"]\n    [[\"300mm\",\"*\",2],\"600mm\"]\n    [[\" 300mm\",\"*\",2],\"600mm\"]\n    [[\" 300 mm\",\"*\",2],\"600mm\"]\n    [[\" 300 mm   \",\"*\",2],\"600mm\"]\n    ]\n  #.........................................................................................................\n  for [ probes, matcher, ] in probes_and_matchers\n    [ unit_probe_txt, operator_probe, factor_probe, ] = probes\n    unit_probe                                        = UNITS.parse unit_probe_txt\n    try\n      result  = UNITS.as_text factor_probe, operator_probe, unit_probe\n    catch error\n      T.fail \"unexpected error for probe #{rpr probes}: #{rpr error.message}\"\n      continue\n    urge '36633', ( jr [ probes, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"UNITS.as_text 3\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"1mm\",\"*\",],\"2mm\"]\n    [[\"1.2mm\",\"*\",null],\"2.4mm\"]\n    ]\n  #.........................................................................................................\n  for [ probes, matcher, ] in probes_and_matchers\n    [ unit_probe_txt, operator_probe, factor_probe, ] = probes\n    unit_probe                                        = UNITS.parse unit_probe_txt\n    try\n      result  = UNITS.as_text factor_probe, operator_probe, unit_probe\n    catch error\n      if ( error.message.match /expected a 'MKTS\\/TABLE\\/quantity', got a/ )?\n        T.ok true\n      else\n        T.fail \"unexpected error for probe #{rpr probes}: #{rpr error.message}\"\n      continue\n    urge '36633', ( jr [ probes, result, ] )\n    # T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"integer multiples\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"15mm\",\"5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":15,\"unit\":\"mm\"}]\n    [[\"14.5mm\",\"5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":15,\"unit\":\"mm\"}]\n    [[\"15.5mm\",\"5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":20,\"unit\":\"mm\"}]\n    [[\"15mm\",\"0.5cm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1.5,\"unit\":\"cm\"}]\n    [[\"14.5mm\",\"0.5cm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1.5,\"unit\":\"cm\"}]\n    [[\"15.5mm\",\"0.5cm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":2,\"unit\":\"cm\"}]\n    [[\"5.25mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1,\"unit\":\"lineheight\"}]\n    [[\"5.26mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1,\"unit\":\"lineheight\"}]\n    [[\"5.27mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":2,\"unit\":\"lineheight\"}]\n    [[\"0.525cm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1,\"unit\":\"lineheight\"}]\n    [[\"0.526cm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1,\"unit\":\"lineheight\"}]\n    [[\"0.527cm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":2,\"unit\":\"lineheight\"}]\n    [[\"15mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":3,\"unit\":\"lineheight\"}]\n    [[\"14.5mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":3,\"unit\":\"lineheight\"}]\n    [[\"15.5mm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":3,\"unit\":\"lineheight\"}]\n    [[\"15mm\",\"2lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":4,\"unit\":\"lineheight\"}]\n    [[\"14.5mm\",\"2lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":4,\"unit\":\"lineheight\"}]\n    [[\"15.5mm\",\"2lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":4,\"unit\":\"lineheight\"}]\n    ]\n  #.........................................................................................................\n  for [ probes, matcher, ] in probes_and_matchers\n    [ cmp_probe_txt, ref_probe_txt, ] = probes\n    cmp_probe       = UNITS.parse cmp_probe_txt\n    ref_probe       = UNITS.parse ref_probe_txt\n    cmp_probe_copy  = Object.assign {}, cmp_probe\n    ref_probe_copy  = Object.assign {}, ref_probe\n    try\n      result  = UNITS.integer_multiple cmp_probe, ref_probe\n    catch error\n      if ( matcher is null ) and ( error.message.match /expected a 'MKTS\\/TABLE\\/quantity', got a/ )?\n        T.ok true\n      else\n        T.fail \"unexpected error for probe #{rpr probes}: #{rpr error.message}\"\n      continue\n    urge '36633', ( jr [ probes, result, ] )\n    T.eq cmp_probe, cmp_probe_copy\n    T.eq ref_probe, ref_probe_copy\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"conform\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"15mm\",\"mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":15,\"unit\":\"mm\"}]\n    [[\"15mm\",\"1mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":15,\"unit\":\"mm\"}]\n    [[\"15mm\",\"2mm\"],null]\n    [[\"15cm\",\"mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":150,\"unit\":\"mm\"}]\n    [[\"15mm\",\"pt\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":42.67913385826772,\"unit\":\"pt\"}]\n    [[\"15mm\",\"cm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1.5,\"unit\":\"cm\"}]\n    [[\"15mm\",\"km\"],null]\n    [[\"1cm\",\"lineheight\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1.9011406844106464,\"unit\":\"lineheight\"}]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    [ probe_a, probe_b, ] = probe\n    probe_a_copy          = if ( CND.isa_text probe_a ) then probe_a else Object.assign {}, probe_a\n    probe_b_copy          = if ( CND.isa_text probe_b ) then probe_b else Object.assign {}, probe_b\n    try\n      result  = UNITS.conform probe_a, probe_b\n    catch error\n      if ( matcher is null ) # and ( error.message.match /expected a 'MKTS\\/TABLE\\/quantity', got a/ )?\n        T.ok true\n        help '36633', ( jr [ probe, matcher, ] )\n      else\n        T.fail \"unexpected error for probe #{rpr probe}: #{rpr error.message}\"\n        warn '36633', ( jr [ probe, matcher, ] )\n      continue\n    urge '36633', ( jr [ probe, result, ] )\n    T.eq probe_a, probe_a_copy\n    T.eq probe_b, probe_b_copy\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"add\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"15mm\",\"5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":20,\"unit\":\"mm\"}]\n    [[\"15cm\",\"5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":15.5,\"unit\":\"cm\"}]\n    [[\"15cm\",\"-5mm\"],{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":14.5,\"unit\":\"cm\"}]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    [ probe_a, probe_b, ] = probe\n    probe_a_copy          = if ( CND.isa_text probe_a ) then probe_a else Object.assign {}, probe_a\n    probe_b_copy          = if ( CND.isa_text probe_b ) then probe_b else Object.assign {}, probe_b\n    try\n      result  = UNITS.add probe_a, probe_b\n    catch error\n      if ( matcher is null ) # and ( error.message.match /expected a 'MKTS\\/TABLE\\/quantity', got a/ )?\n        T.ok true\n        help '36633', ( jr [ probe, matcher, ] )\n      else\n        T.fail \"unexpected error for probe #{rpr probe}: #{rpr error.message}\"\n        warn '36633', ( jr [ probe, matcher, ] )\n      continue\n    urge '36633', ( jr [ probe, result, ] )\n    T.eq probe_a, probe_a_copy\n    T.eq probe_b, probe_b_copy\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"negate\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"32pt\",{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":-32,\"unit\":\"pt\"}]\n    [\"150cm\",{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":-150,\"unit\":\"cm\"}]\n    [\"-1mm\",{\"~isa\":\"MKTS/TABLE/quantity\",\"value\":1,\"unit\":\"mm\"}]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    try\n      result  = UNITS.negate probe\n    catch error\n      if ( matcher is null ) # and ( error.message.match /expected a 'MKTS\\/TABLE\\/quantity', got a/ )?\n        T.ok true\n        help '36633', ( jr [ probe, matcher, ] )\n      else\n        T.fail \"unexpected error for probe #{rpr probe}: #{rpr error.message}\"\n        warn '36633', ( jr [ probe, matcher, ] )\n      continue\n    urge '36633', ( jr [ probe, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"UNITS.parse 1\"\n    \"UNITS.as_text 1\"\n    \"UNITS.as_text 2\"\n    \"UNITS.as_text 3\"\n    \"integer multiples\"\n    \"conform\"\n    \"add\"\n    \"negate\"\n    ]\n  @_prune()\n  @_main()\n\n\n\n\n\n\n\n\n"
  ]
}