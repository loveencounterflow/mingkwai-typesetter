{
  "version": 3,
  "file": "html-tags.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/html-tags.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HTML-TAGS/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\njoin                      = ( x, joiner = '' ) -> x.join joiner\nXREGEXP                   = require 'xregexp'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ->\n  test @, 'timeout': 30000\n\n#-----------------------------------------------------------------------------------------------------------\nget_patterns = ( tag_name ) -> {\n  start: ///<#{tag_name}>|<#{tag_name}\\s+(?<attributes>[^>]*)(?<!\\/)>///g\n  stop:  ///<\\/#{tag_name}>///g }\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"div\",\"what<div>helo\",true,null]\n    [\"div\",\"what<div a=10>helo\",true,\"a=10\"]\n    [\"div\",\"what<div path=foo/bar>helo\",true,\"path=foo/bar\"]\n    [\"div\",\"what<div path=foo/bar/>helo\",false,null]\n    [\"div\",\"what<div path='foo/bar/'>helo\",true,\"path='foo/bar/'\"]\n    [\"frob\",\"what<frob/>helo\",false,null]\n    ]\n  #.........................................................................................................\n  for [ tag_name, probe, is_hit_matcher, attributes_matcher, ] in probes_and_matchers\n    start_tag_pattern = ///<#{tag_name}>|<#{tag_name}\\s+(?<attributes>[^>]*)(?<!\\/)>///\n    result      = probe.match start_tag_pattern\n    is_hit      = result?\n    attributes  = result?.groups?.attributes ? null\n    urge '36633', ( jr [ tag_name, probe, is_hit, attributes, ] )\n    T.eq is_hit, is_hit_matcher\n    T.eq attributes, attributes_matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"start pattern\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"div\",\"what<div>helo\",[\"<div>\"]]\n    [\"div\",\"what<div a=10>helo\",[\"<div a=10>\"]]\n    [\"div\",\"what<div path=foo/bar>helo<div>x</div></div>\",[\"<div path=foo/bar>\",\"<div>\"]]\n    [\"div\",\"what<div path=foo/bar/ frob=42 ding>helo\",[\"<div path=foo/bar/ frob=42 ding>\"]]\n    [\"div\",\"what<div path='foo/bar/'>helo\",[\"<div path='foo/bar/'>\"]]\n    [\"div\",\"what<div path=foo/bar/>helo\",null]\n    [\"frob\",\"what<frob/>helo\",null]\n    ]\n  #.........................................................................................................\n  for [ tag_name, probe, matcher, ] in probes_and_matchers\n    patterns    = get_patterns tag_name\n    result      = probe.match patterns.start\n    urge '36633', ( jr [ tag_name, probe, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"recursive\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"div\",\"what<div>helo\\n</div>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<div>\"},{\"name\":\"match\",\"value\":\"helo\\n\"},{\"name\":\"right\",\"value\":\"</div>\"}]]\n    [\"div\",\"what<div a=10>helo</div>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<div a=10>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</div>\"}]]\n    [\"raw\",\"what<raw path=foo/bar>helo</raw>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<raw path=foo/bar>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</raw>\"}]]\n    [\"raw\",\"what<raw path=foo/bar/>helo\",[{\"name\":\"between\",\"value\":\"what<raw path=foo/bar/>helo\"}]]\n    [\"raw\",\"what<raw path='foo/bar/'>helo</raw>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<raw path='foo/bar/'>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</raw>\"}]]\n    [\"frob\",\"what<frob/>helo\",[{\"name\":\"between\",\"value\":\"what<frob/>helo\"}]]\n    ]\n  #.........................................................................................................\n  settings  = { valueNames: [ 'between', 'left', 'match', 'right', ], }\n  for [ tag_name, probe, matcher, ] in probes_and_matchers\n    { start, stop, }  = get_patterns tag_name\n    try\n      result = XREGEXP.matchRecursive probe, start.source, stop.source, 'g', settings\n    catch error\n      if matcher is null\n        T.ok true\n        help '36633', ( jr [ probe, null, ] )\n      else\n        T.fail error.message\n        warn '36633', ( jr [ probe, null, ] )\n      continue\n    result      = ( { name, value, } for { name, value, } in result )\n    urge '36633', ( jr [ tag_name, probe, result, ] )\n    T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"parse attributes\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"div\",\"what<div>helo\\n</div>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<div>\"},{\"name\":\"match\",\"value\":\"helo\\n\"},{\"name\":\"right\",\"value\":\"</div>\"}]]\n    [\"div\",\"what<div a=10>helo</div>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<div a=10>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</div>\"}]]\n    [\"raw\",\"what<raw path=foo/bar>helo</raw>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<raw path=foo/bar>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</raw>\"}]]\n    [\"raw\",\"what<raw path=foo/bar/>helo\",[{\"name\":\"between\",\"value\":\"what<raw path=foo/bar/>helo\"}]]\n    [\"raw\",\"what<raw path='foo/bar/'>helo</raw>\",[{\"name\":\"between\",\"value\":\"what\"},{\"name\":\"left\",\"value\":\"<raw path='foo/bar/'>\"},{\"name\":\"match\",\"value\":\"helo\"},{\"name\":\"right\",\"value\":\"</raw>\"}]]\n    [\"frob\",\"what<frob/>helo\",[{\"name\":\"between\",\"value\":\"what<frob/>helo\"}]]\n    ]\n  #.........................................................................................................\n  settings  = { valueNames: [ 'between', 'left', 'match', 'right', ], }\n  for [ tag_name, probe, matcher, ] in probes_and_matchers\n    { start, stop, }  = get_patterns tag_name\n    try\n      result = XREGEXP.matchRecursive probe, start.source, stop.source, 'g', settings\n    catch error\n      if matcher is null\n        T.ok true\n        help '36633', ( jr [ probe, null, ] )\n      else\n        T.fail error.message\n        warn '36633', ( jr [ probe, null, ] )\n      continue\n    result      = ( { name, value, } for { name, value, } in result )\n    urge '36633', ( jr [ tag_name, probe, result, ] )\n    # T.eq result, matcher\n  #.........................................................................................................\n  done()\n\n  # for [ probe, matcher, ] in probes_and_matchers\n  #   result = probe.match start_tag_pattern\n  #   try\n  #   catch error\n  #     # throw error\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"basic\"\n    \"start pattern\"\n    \"recursive\"\n    \"parse attributes\"\n    ]\n  @_prune()\n  @_main()\n\n\n\n\n\n\n"
  ]
}