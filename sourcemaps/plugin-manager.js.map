{"version":3,"sources":["plugin-manager.coffee"],"names":[],"mappings":"AAEA;AAAA,MAAA,0IAAA;IAAA;;EAAA,QAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,MAAA,GAA4B,OAAA,CAAQ,IAAR;;EAE5B,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAE5B,OAAA,GAA4B,OAAA,CAAQ,oBAAR;;EAC5B,IAAA,GAA4B,OAAO,CAAC;;EAEpC,CAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,CAAA,GAA4B,CAAC,CAAC,KAAK,CAAC,IAAR,CAAa,CAAb;;EAC5B,MAAA,GAA4B,CAAC,CAAC,WAAW,CAAC,IAAd,CAAmB,CAAnB;;EAI5B,IAAA,GAA4B,QAAQ,CAAC;;EACrC,UAAA,GAA4B,SAAE,KAAF;WAAa,CAAE,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAF,CAAyB,CAAC,WAA1B,CAAA;EAAb;;EAG5B,IAAC,CAAA,yBAAD,GAA6B,SAAE,WAAF,EAAe,QAAf;AAC3B,QAAA;IAAA,OAAA,2EAAyC;IACzC,YAAA,GAAgB,MAAM,CAAC,WAAP,CAAmB,WAAnB;IAChB,CAAA,GAAgB;AAEhB,SAAA,8CAAA;;MACE,IAAY,WAAW,CAAC,UAAZ,CAAuB,GAAvB,CAAZ;AAAA,iBAAA;;MACA,YAAA,GAAe,IAAA,CAAK,WAAL,EAAkB,WAAlB;MACf,IAAA,CAAgB,UAAA,CAAW,YAAX,CAAhB;AAAA,iBAAA;;MACA,YAAA,GAAkB,OAAA,CAAQ,IAAA,CAAK,YAAL,EAAmB,cAAnB,CAAR;MAClB,IAAG,6CAAH;QACE,IAAoC,aAAW,QAAX,EAAA,OAAA,MAApC;UAAA,CAAG,CAAA,YAAA,CAAH,GAAoB,aAApB;SADF;;AALF;AAQA,WAAO;EAboB;;EAiB7B,IAAO,qBAAP;IACE,KAAA,CAAM,IAAC,CAAA,yBAAD,CAA2B,IAAA,CAAK,SAAL,EAAgB,cAAhB,CAA3B,CAAN,EADF;;AA9CA","file":"plugin-manager.js","sourceRoot":"/source/","sourcesContent":["\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'mkts/plugin-manager'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n\n\n#...........................................................................................................\njoin                      = njs_path.resolve\nisa_folder                = ( route ) -> ( njs_fs.statSync route ).isDirectory()\n\n#-----------------------------------------------------------------------------------------------------------\n@find_plugin_package_infos = ( plugin_home, settings ) ->\n  keyword       = settings?[ 'keyword' ] ? 'mingkwai-typesetter-plugin'\n  plugin_names  = njs_fs.readdirSync plugin_home\n  R             = {}\n  #.........................................................................................................\n  for plugin_name in plugin_names\n    continue if plugin_name.startsWith '.'\n    plugin_route = join plugin_home, plugin_name\n    continue unless isa_folder plugin_route\n    package_info    = require join plugin_route, 'package.json'\n    if ( keywords = package_info[ 'keywords' ] )?\n      R[ plugin_route ] = package_info if keyword in keywords\n  #.........................................................................................................\n  return R\n\n\n############################################################################################################\nunless module.parent?\n  debug @find_plugin_package_infos join __dirname, 'node_modules'\n\n"]}