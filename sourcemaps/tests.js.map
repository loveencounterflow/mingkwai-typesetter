{"version":3,"sources":["tests.coffee"],"names":[],"mappings":"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","file":"tests.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\njoin                      = njs_path.join\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\nafter                     = suspend.after\n# eventually                = suspend.eventually\n### TAINT experimentally using `later` in place of `setImmediate` ###\nlater                     = suspend.immediately\n#...........................................................................................................\ntest                      = require 'guy-test'\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nMKTS                      = require './MKTS'\nMKTS_XXX                  = require './mkts-typesetter-interim'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\nshow_events = ( probe, events ) ->\n  whisper probe\n  echo \"[\"\n  for event in events\n    echo \"    #{JSON.stringify event}\"\n  echo \"    ]\"\n\n#-----------------------------------------------------------------------------------------------------------\ncopy_regex_non_global = ( re ) ->\n  flags = ( if re.ignoreCase then 'i' else '' ) + \\\n          ( if re.multiline  then 'm' else '' ) +\n          ( if re.sticky     then 'y' else '' )\n  return new RegExp re.source, flags\n\n#-----------------------------------------------------------------------------------------------------------\nlist_from_match = ( match ) ->\n  return null unless match?\n  R = Array.from match\n  R.splice 0, 1\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nmatch_first = ( patterns, probe ) ->\n  for pattern in patterns\n    return R if ( R = probe.match pattern )?\n  return null\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.action_patterns[ 0 ] matches action macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(.>><<)>>\",[\"\",\".\",\"\",\"\"]]\n    [\"<<(.>>xxx<<)>>\",[\"\",\".\",\"xxx\",\"\"]]\n    [\"<<(.>>some code<<)>>\",[\"\",\".\",\"some code\",\"\"]]\n    [\"abc<<(.>>4 + 3<<)>>def\",[\"c\",\".\",\"4 + 3\",\"\"]]\n    [\"<<(:>><<)>>\",[\"\",\":\",\"\",\"\"]]\n    [\"<<(:>>xxx<<)>>\",[\"\",\":\",\"xxx\",\"\"]]\n    [\"<<(:>>some code<<)>>\",[\"\",\":\",\"some code\",\"\"]]\n    [\"abc<<(:>>4 + 3<<)>>def\",[\"c\",\":\",\"4 + 3\",\"\"]]\n    [\"abc<<(:>>bitfield \\\\>> 1 <<)>>def\",[\"c\",\":\",\"bitfield \\\\>> 1 \",\"\"]]\n    [\"abc<<(:>>bitfield >\\\\> 1 <<)>>def\",[\"c\",\":\",\"bitfield >\\\\> 1 \",\"\"]]\n    [\"abc<<(:js>>4 + 3<<)>>def\",[\"c\",\":js\",\"4 + 3\",\"\"]]\n    [\"abc<<(.js>>4 + 3<<)>>def\",[\"c\",\".js\",\"4 + 3\",\"\"]]\n    [\"abc<<(:js>>4 + 3<<:js)>>def\",[\"c\",\":js\",\"4 + 3\",\":js\"]]\n    [\"abc<<(.js>>4 + 3<<.js)>>def\",[\"c\",\".js\",\"4 + 3\",\".js\"]]\n    [\"abc<<(:js>>4 + 3<<:)>>def\",null]\n    [\"abc<<(.js>>4 + 3<<.)>>def\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS._ESC.action_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.bracketed_raw_patterns matches raw macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<<...raw material...>>>\",[\"\",\"<\",\"...raw material...\"]]\n    [\"<<(.>>some code<<)>>\",null]\n    [\"<<<>>>\",[\"\",\"<\",\"\"]]\n    [\"abcdef<<<\\\\XeLaTeX{}>>>ghijklm\",[\"f\",\"<\",\"\\\\XeLaTeX{}\"]]\n    [\"abcdef<<<123\\\\>>>0>>>ghijklm\",[\"f\",\"<\",\"123\\\\>>>0\"]]\n    [\"abcdef\\\\<<<123>>>ghijklm\",null]\n    [\"abcdef<\\\\<<123>>>ghijklm\",null]\n    [\"abcdef<<\\\\<123>>>ghijklm\",null]\n    [\"abcdef<<<123>>\\\\>ghijklm\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS._ESC.bracketed_raw_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.command_and_value_patterns matches command macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<!>>\",[\"\",\"!\",\"\"]]\n    [\"<<!name>>\",[\"\",\"!\",\"name\"]]\n    [\"abc<<!name>>def\",[\"c\",\"!\",\"name\"]]\n    [\"abc<<!n>me>>def\",[\"c\",\"!\",\"n>me\"]]\n    [\"abc<<!n>\\\\>me>>def\",[\"c\",\"!\",\"n>\\\\>me\"]]\n    [\"abc<<!n\\\\>me>>def\",[\"c\",\"!\",\"n\\\\>me\"]]\n    [\"abc\\\\<<!nme>>def\",null]\n    [\"<<$>>\",[\"\",\"$\",\"\"]]\n    [\"<<$name>>\",[\"\",\"$\",\"name\"]]\n    [\"abc<<$name>>def\",[\"c\",\"$\",\"name\"]]\n    [\"abc<<$n>me>>def\",[\"c\",\"$\",\"n>me\"]]\n    [\"abc<<$n>\\\\>me>>def\",[\"c\",\"$\",\"n>\\\\>me\"]]\n    [\"abc<<$n\\\\>me>>def\",[\"c\",\"$\",\"n\\\\>me\"]]\n    [\"abc\\\\<<$nme>>def\",null]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS._ESC.command_and_value_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.illegal_patterns matches consecutive unescaped LPBs\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"helo world\",null]\n    [\"helo \\\\<< world\",null]\n    [\"helo <\\\\< world\",null]\n    [\"helo << world\",[\" \",\"<<\",\" world\"]]\n    ]\n  patterns = ( copy_regex_non_global pattern for pattern in MKTS._ESC.illegal_patterns )\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.end_command_patterns matches end command macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!end>> and some there\",[\"some text here \"]]\n    [\"some text here <<!end>>\",[\"some text here \"]]\n    [\"<<!end>>\",[\"\"]]\n    [\"\",null]\n    [\"<<!end>> and some there\",[\"\"]]\n    [\"\\\\<<!end>> and some there\",null]\n    [\"some text here \\\\<<!end>> and some there\",null]\n    [\"some text here <<!end>\\\\> and some there\",null]\n    ]\n  patterns = MKTS._ESC.end_command_patterns\n  for [ probe, matcher, ] in probes_and_matchers\n    result = list_from_match match_first patterns, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.truncate_text_at_end_command_macro\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!end>> and some there\",[\"some text here \",23]]\n    [\"some text here <<!end>>\",[\"some text here \",8]]\n    [\"<<!end>>\",[\"\",8]]\n    [\"\",[\"\",0]]\n    [\"<<!end>> and some there\",[\"\",23]]\n    [\"\\\\<<!end>> and some there\",[\"\\\\<<!end>> and some there\",0]]\n    [\"some text here \\\\<<!end>> and some there\",[\"some text here \\\\<<!end>> and some there\",0]]\n    [\"some text here <<!end>\\\\> and some there\",[\"some text here <<!end>\\\\> and some there\",0]]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    result = MKTS._ESC.truncate_text_at_end_command_macro null, probe\n    help JSON.stringify [ probe, result, ]\n    T.eq result, matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_html_comments\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here and some there\",\"some text here and some there\",[]]\n    [\"some text here<!-- omit this --> and some there\",\"some text here\\u0015comment0\\u0013 and some there\",[{\"key\":\"comment0\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"}]]\n    [\"some text here\\\\<!-- omit this --> and some there\",\"some text here\\\\<!-- omit this --> and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd<<<some raw content>>>efg\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_html_comments S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_bracketed_raw_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here<<!foo>>and some there\",\"some text here<<!foo>>and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd\\u0015raw0\\u0013efg\",[{\"key\":\"raw0\",\"markup\":\"<\",\"raw\":\"some raw content\",\"parsed\":null}]]\n    [\"abcd\\\\<<<some raw content>>>efg\",\"abcd\\\\<<<some raw content>>>efg\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_bracketed_raw_macros S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_region_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<(em>>and some there<<em)>>\",\"some text here \\u0015region0\\u0013and some there\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"em\",\"raw\":\"<<(em>>\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\"em\",\"raw\":\"<<em)>>\",\"parsed\":null}]]\n    [\"some text here \\\\<<(em>>and some there<<em)>>\",\"some text here \\\\<<(em>>and some there<<em)>>\",[]]\n    [\"some text here <<(em>>and some there\\\\<<em)>>\",\"some text here \\u0015region0\\u0013and some there\\\\\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"em\",\"raw\":\"<<(em>>\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\"em\",\"raw\":\"<<em)>>\",\"parsed\":null}]]\n    [\"some text here <<(em>>and some there<<)>>\",\"some text here \\u0015region0\\u0013and some there\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"em\",\"raw\":\"<<(em>>\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\"em\",\"raw\":\"<<)>>\",\"parsed\":null}]]\n    [\"some text here \\\\<<(em>>and some there<<)>>\",\"some text here \\\\<<(em>>and some there<<)>>\",[]]\n    [\"some text here <<(em>>and some there\\\\<<)>>\",\"some text here \\u0015region0\\u0013and some there\\\\\\u0015region1\\u0013\",[{\"key\":\"region0\",\"markup\":\"em\",\"raw\":\"<<(em>>\",\"parsed\":null},{\"key\":\"region1\",\"markup\":\"em\",\"raw\":\"<<)>>\",\"parsed\":null}]]\n    [\"some text here <<(em>>and some there<<foo)>>\",\"some text here <<(em>>and some there<<foo)>>\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_region_macros S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_action_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(.>><<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"\",\"parsed\":null}]]\n    [\"<<(.>>xxx<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"xxx\",\"parsed\":null}]]\n    [\"<<(.>>some code<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}]]\n    [\"abc<<(.>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"coffee\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"<<(:>><<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"\",\"parsed\":null}]]\n    [\"<<(:>>xxx<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"xxx\",\"parsed\":null}]]\n    [\"<<(:>>some code<<)>>\",\"\\u0015action0\\u0013\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null}]]\n    [\"abc<<(:>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:>>bitfield \\\\>> 1 <<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"bitfield \\\\>> 1 \",\"parsed\":null}]]\n    [\"abc<<(:>>bitfield >\\\\> 1 <<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"bitfield >\\\\> 1 \",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(.js>>4 + 3<<)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<:js)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"vocal\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(.js>>4 + 3<<.js)>>def\",\"abc\\u0015action0\\u0013def\",[{\"key\":\"action0\",\"markup\":[\"silent\",\"js\"],\"raw\":\"4 + 3\",\"parsed\":null}]]\n    [\"abc<<(:js>>4 + 3<<:)>>def\",\"abc<<(:js>>4 + 3<<:)>>def\",[]]\n    [\"abc<<(.js>>4 + 3<<.)>>def\",\"abc<<(.js>>4 + 3<<.)>>def\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_action_macros S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_command_and_value_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"some text here <<!foo>> and some there\",\"some text here \\u0015command0\\u0013 and some there\",[{\"key\":\"command0\",\"markup\":\"!\",\"raw\":\"foo\",\"parsed\":\"???\"}]]\n    [\"some text here <<$foo>> and some there\",\"some text here \\u0015value0\\u0013 and some there\",[{\"key\":\"value0\",\"markup\":\"$\",\"raw\":\"foo\",\"parsed\":\"???\"}]]\n    [\"some text here \\\\<<!foo>> and some there\",\"some text here \\\\<<!foo>> and some there\",[]]\n    [\"some text here \\\\<<$foo>> and some there\",\"some text here \\\\<<$foo>> and some there\",[]]\n    [\"some text here<!-- omit this --> and some there\",\"some text here<!-- omit this --> and some there\",[]]\n    [\"abcd<<<some raw content>>>efg\",\"abcd<<<some raw content>>>efg\",[]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_command_and_value_macros S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS._ESC.escape_macros\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"<<(multi-column 3>>\\nsome text here<!-- omit this --> and some there\\n<<)>>\\n<<(multi-column 2>>\\nThis text will appear in two-column<!-- omit this --> layout.\\n<!--some code-->\\n<<(:>>some code<<)>>\\n<<)>>\\n<<!end>>\\n<<!command>><<(:action>><<)>>\",\"\\u0015region4\\u0013\\nsome text here\\u0015comment0\\u0013 and some there\\n\\u0015region5\\u0013\\n\\u0015region6\\u0013\\nThis text will appear in two-column\\u0015comment1\\u0013 layout.\\n\\u0015comment2\\u0013\\n\\u0015action3\\u0013\\n\\u0015region7\\u0013\\n\",[{\"key\":\"comment0\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"},{\"key\":\"comment1\",\"markup\":null,\"raw\":\" omit this \",\"parsed\":\"omit this\"},{\"key\":\"comment2\",\"markup\":null,\"raw\":\"some code\",\"parsed\":\"some code\"},{\"key\":\"action3\",\"markup\":[\"vocal\",\"coffee\"],\"raw\":\"some code\",\"parsed\":null},{\"key\":\"region4\",\"markup\":\"multi-column 3\",\"raw\":\"<<(multi-column 3>>\",\"parsed\":null},{\"key\":\"region5\",\"markup\":\"multi-column 3\",\"raw\":\"<<)>>\",\"parsed\":null},{\"key\":\"region6\",\"markup\":\"multi-column 2\",\"raw\":\"<<(multi-column 2>>\",\"parsed\":null},{\"key\":\"region7\",\"markup\":\"multi-column 2\",\"raw\":\"<<)>>\",\"parsed\":null}]]\n    ]\n  for [ probe, text_matcher, registry_matcher, ] in probes_and_matchers\n    S = MKTS._ESC.initialize {}\n    text_result = MKTS._ESC.escape_macros S, probe\n    help JSON.stringify [ probe, text_result, S._ESC[ 'registry' ], ]\n    urge '\\n' + probe\n    info '\\n' + text_result\n    # T.fail \"not ready\"\n    T.eq text_result, text_matcher\n    T.eq S._ESC[ 'registry' ], registry_matcher\n  done()\n\n\n#-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse accepts dot patterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ '.',     [ '.', null,   null, ], ]\n#     [ '.p',    [ '.', 'p',    null, ], ]\n#     [ '.text', [ '.', 'text', null, ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     # help ( rpr probe ), MKTS.FENCES.parse probe\n#     T.eq ( MKTS.FENCES.parse probe ), matcher\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse accepts empty fenced patterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ '<>', [ '<', null, '>', ], ]\n#     [ '{}', [ '{', null, '}', ], ]\n#     [ '[]', [ '[', null, ']', ], ]\n#     [ '()', [ '(', null, ')', ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     # help ( rpr probe ), MKTS.FENCES.parse probe\n#     T.eq ( MKTS.FENCES.parse probe ), matcher\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse accepts unfenced named patterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ 'document',       [ null, 'document',     null, ], ]\n#     [ 'singlecolumn',   [ null, 'singlecolumn', null, ], ]\n#     [ 'code',           [ null, 'code',         null, ], ]\n#     [ 'blockquote',     [ null, 'blockquote',   null, ], ]\n#     [ 'em',             [ null, 'em',           null, ], ]\n#     [ 'xxx',            [ null, 'xxx',          null, ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     # help ( rpr probe ), MKTS.FENCES.parse probe\n#     T.eq ( MKTS.FENCES.parse probe ), matcher\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse accepts fenced named patterns\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ '<document>',     [ '<', 'document',     '>', ], ]\n#     [ '{singlecolumn}', [ '{', 'singlecolumn', '}', ], ]\n#     [ '{code}',         [ '{', 'code',         '}', ], ]\n#     [ '[blockquote]',   [ '[', 'blockquote',   ']', ], ]\n#     [ '(em)',           [ '(', 'em',           ')', ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     # help ( rpr probe ), MKTS.FENCES.parse probe\n#     T.eq ( MKTS.FENCES.parse probe ), matcher\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse rejects empty string\" ] = ( T, done ) ->\n#   T.throws \"pattern must be non-empty, got ''\", ( -> MKTS.FENCES.parse '' )\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse rejects non-matching fences etc\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ '(xxx}',  'fences don\\'t match in pattern \\'(xxx}\\'',          ]\n#     [ '.)',     'fence \\'.\\' can not have right fence, got \\'.)\\'',  ]\n#     [ '.p)',    'fence \\'.\\' can not have right fence, got \\'.p)\\'', ]\n#     [ '.[',     'fence \\'.\\' can not have right fence, got \\'.[\\'',  ]\n#     [ '<',      'unmatched fence in \\'<\\'',                          ]\n#     [ '{',      'unmatched fence in \\'{\\'',                          ]\n#     [ '[',      'unmatched fence in \\'[\\'',                          ]\n#     [ '(',      'unmatched fence in \\'(\\'',                          ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     T.throws matcher, ( -> MKTS.FENCES.parse probe )\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.FENCES.parse accepts non-matching fences when so configured\" ] = ( T, done ) ->\n#   probes_and_matchers = [\n#     [ '<document>',     [ '<', 'document',     '>', ], ]\n#     [ '{singlecolumn}', [ '{', 'singlecolumn', '}', ], ]\n#     [ '{code}',         [ '{', 'code',         '}', ], ]\n#     [ '[blockquote]',   [ '[', 'blockquote',   ']', ], ]\n#     [ '(em)',           [ '(', 'em',           ')', ], ]\n#     [ 'document>',      [ null, 'document',     '>', ], ]\n#     [ 'singlecolumn}',  [ null, 'singlecolumn', '}', ], ]\n#     [ 'code}',          [ null, 'code',         '}', ], ]\n#     [ 'blockquote]',    [ null, 'blockquote',   ']', ], ]\n#     [ 'em)',            [ null, 'em',           ')', ], ]\n#     [ '<document',      [ '<', 'document',     null, ], ]\n#     [ '{singlecolumn',  [ '{', 'singlecolumn', null, ], ]\n#     [ '{code',          [ '{', 'code',         null, ], ]\n#     [ '[blockquote',    [ '[', 'blockquote',   null, ], ]\n#     [ '(em',            [ '(', 'em',           null, ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     # help ( rpr probe ), MKTS.FENCES.parse probe\n#     T.eq ( MKTS.FENCES.parse probe, symmetric: no ), matcher\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.TRACKER.new_tracker (short comprehensive test)\" ] = ( T, done ) ->\n#   track = MKTS.TRACKER.new_tracker '(code)', '{multi-column}'\n#   probes_and_matchers = [\n#     [ [ '<', 'document',     ], [  no,  no, ], ]\n#     [ [ '{', 'multi-column', ], [  no, yes, ], ]\n#     [ [ '(', 'code',         ], [ yes, yes, ], ]\n#     [ [ '{', 'multi-column', ], [ yes, yes, ], ]\n#     [ [ '.', 'text',         ], [ yes, yes, ], ]\n#     [ [ '}', 'multi-column', ], [ yes, yes, ], ]\n#     [ [ ')', 'code',         ], [  no, yes, ], ]\n#     [ [ '}', 'multi-column', ], [  no,  no, ], ]\n#     [ [ '>', 'document',     ], [  no,  no, ], ]\n#     ]\n#   for [ probe, matcher, ] in probes_and_matchers\n#     track probe\n#     whisper probe\n#     help '(code):', ( track.within '(code)' ), '{multi-column}:', ( track.within '{multi-column}' )\n#     T.eq ( track.within '(code)'          ), matcher[ 0 ]\n#     T.eq ( track.within '{multi-column}'  ), matcher[ 1 ]\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (1)\" ] = ( T, done ) ->\n#   # settings  = bare: yes\n#   probe     = \"\"\"`<<($>>eval block<<$)>>`\"\"\"\n#   warn \"should merge texts\"\n#   matcher   = [\n#     [\"<\",\"document\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<($>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\">\",\"document\",null,{}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, resume\n#     show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (2)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"`<<($>>eval block<<$)>>`\"\"\"\n#   warn \"should merge texts\"\n#   matcher   = [\n#     [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<($>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (3)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"`<<(\\\\$>>eval block<<\\\\$)>>`\"\"\"\n#   warn \"should merge texts\"\n#   matcher   = [\n#     [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<(\\\\$>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"text\",\"<<\\\\$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (4)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"<<!end>>\"\"\"\n#   warn \"match remark?\"\n#   matcher   = [\n#     [\"!\",\"end\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"stamped\":true}]\n#     [\"#\",\"info\",\"encountered `<<!end>>` on line #1\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"stamped\":true,\"badge\":\"$process_end_command\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (5)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"<<!multi-column>>\"\"\"\n#   warn \"should not contain `.p`\"\n#   matcher   = [\n#     [\"!\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (6)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     aaa\n#     <<(multi-column>>\n#     bbb\n#     <<multi-column)>>\n#     ccc\n#     \"\"\"\n#   warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = [\n#     [\".\",\"text\",\"aaa\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     [\"(\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     [\".\",\"text\",\"\\nbbb\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     [\")\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     [\".\",\"text\",\"\\nccc\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (7)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     她說：「你好。」\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = [\n#     [\".\",\"text\",\"她說：「你好。」\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md (8)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     A paragraph with *emphasis*.\n\n#     A paragraph with **bold text**.\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = [\n#     [\".\",\"text\",\"A paragraph with \",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\"(\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n#     [\".\",\"text\",\"emphasis\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\")\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n#     [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n#     [\".\",\"text\",\"A paragraph with \",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n#     [\"(\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n#     [\".\",\"text\",\"bold text\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n#     [\")\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n#     [\".\",\"text\",\".\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS.mkts_events_from_md: footnotes\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     Here is an inline footnote^[whose text appears at the point of insertion],\n#     followed by a referenced footnote[^1].\n\n#     [^1]: Referenced footnotes must use matching references.\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = [\n#     [\".\",\"text\",\"Here is an inline footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\"(\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"text\",\"whose text appears at the point of insertion\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\")\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"text\",\",\\nfollowed by a referenced footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\"(\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"text\",\"Referenced footnotes must use matching references.\",{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n#     [\")\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n#     ]\n#   step ( resume ) =>\n#     result = yield MKTS.mkts_events_from_md probe, settings, resume\n#     # show_events probe, result\n#     T.eq matcher, result\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS_XXX.tex_from_md (1)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     A paragraph with *emphasis*.\n\n#     A paragraph with **bold text**.\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = \"\"\"\n#     % begin of MD document\n#     A paragraph with {\\\\mktsStyleItalic{}emphasis\\\\/}.\\\\mktsShowpar\\\\par\n#     A paragraph with {\\\\mktsStyleBold{}bold text}.\\\\mktsShowpar\\\\par\n\n#     % end of MD document\n\n#     \"\"\"\n#   step ( resume ) =>\n#     result = yield MKTS_XXX.tex_from_md probe, settings, resume\n#     echo result\n#     T.eq matcher.trim(), result.trim()\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS_XXX.mktscript_from_md (1)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     A paragraph with *emphasis*.\n\n#     A paragraph with **bold text**.\n\n#     Using <foo>HTML tags **inhibits** MD syntax</foo>.\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = \"\"\"\n#     1 █ (document\n#     1 █ .text 'A paragraph with '\n#     1 █ (em\n#     1 █ .text 'emphasis'\n#     1 █ )em\n#     1 █ .text '.'\n#     1 █ .p\n#     3 █ .text 'A paragraph with '\n#     3 █ (strong\n#     3 █ .text 'bold text'\n#     3 █ )strong\n#     3 █ .text '.'\n#     3 █ .p\n#     5 █ .text 'Using '\n#     5 █ (foo\n#     5 █ .text 'HTML tags '\n#     5 █ (strong\n#     5 █ .text 'inhibits'\n#     5 █ )strong\n#     5 █ .text ' MD syntax'\n#     5 █ )foo\n#     5 █ .text '.'\n#     5 █ .p\n#     )document\n#     # EOF\n#     \"\"\"\n#   step ( resume ) =>\n#     result = yield MKTS.mktscript_from_md probe, settings, resume\n#     echo result\n#     T.eq matcher.trim(), result.trim()\n#     done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"MKTS_XXX.mktscript_from_md (2)\" ] = ( T, done ) ->\n#   settings  = bare: yes\n#   probe     = \"\"\"\n#     <<(multi-column>>\n\n#     <div>B</div>\n\n#     \"\"\"\n#   # warn \"missing `.p` inside `(multi-column)`\"\n#   matcher   = \"\"\"\n#     1 █ (document\n#     1 █ (multi-column\n#     1 █ .p\n#     1 █ (div\n#     1 █ .text 'B'\n#     1 █ )div\n#     1 █ .p\n#     #resend '`multi-column)`'\n#     1 █ )multi-column\n#     )document\n#     # EOF\n#     \"\"\"\n#   step ( resume ) =>\n#     result = yield MKTS.mktscript_from_md probe, settings, resume\n#     echo result\n#     T.eq matcher.trim(), result.trim()\n#     # T.fail \"not yet ready\"\n#     done()\n\n\n#===========================================================================================================\n# MAIN\n#-----------------------------------------------------------------------------------------------------------\n@_main = ( handler ) ->\n  test @, 'timeout': 2500\n\n\n############################################################################################################\nunless module.parent?\n  @_main()\n\n"]}