{"version":3,"sources":["tests.coffee"],"names":[],"mappings":"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","file":"tests.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\njoin                      = njs_path.join\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\nafter                     = suspend.after\n# eventually                = suspend.eventually\n### TAINT experimentally using `later` in place of `setImmediate` ###\nlater                     = suspend.immediately\n#...........................................................................................................\ntest                      = require 'guy-test'\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nMKTS                      = require './MKTS'\nMKTS_XXX                  = require './mkts-typesetter-interim'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse accepts dot patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '.',     [ '.', null,   null, ], ]\n    [ '.p',    [ '.', 'p',    null, ], ]\n    [ '.text', [ '.', 'text', null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.FENCES.parse probe\n    T.eq ( MKTS.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse accepts empty fenced patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '<>', [ '<', null, '>', ], ]\n    [ '{}', [ '{', null, '}', ], ]\n    [ '[]', [ '[', null, ']', ], ]\n    [ '()', [ '(', null, ')', ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.FENCES.parse probe\n    T.eq ( MKTS.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse accepts unfenced named patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ 'document',       [ null, 'document',     null, ], ]\n    [ 'singlecolumn',   [ null, 'singlecolumn', null, ], ]\n    [ 'code',           [ null, 'code',         null, ], ]\n    [ 'blockquote',     [ null, 'blockquote',   null, ], ]\n    [ 'em',             [ null, 'em',           null, ], ]\n    [ 'xxx',            [ null, 'xxx',          null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.FENCES.parse probe\n    T.eq ( MKTS.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse accepts fenced named patterns\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '<document>',     [ '<', 'document',     '>', ], ]\n    [ '{singlecolumn}', [ '{', 'singlecolumn', '}', ], ]\n    [ '{code}',         [ '{', 'code',         '}', ], ]\n    [ '[blockquote]',   [ '[', 'blockquote',   ']', ], ]\n    [ '(em)',           [ '(', 'em',           ')', ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.FENCES.parse probe\n    T.eq ( MKTS.FENCES.parse probe ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse rejects empty string\" ] = ( T, done ) ->\n  T.throws \"pattern must be non-empty, got ''\", ( -> MKTS.FENCES.parse '' )\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse rejects non-matching fences etc\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '(xxx}',  'fences don\\'t match in pattern \\'(xxx}\\'',          ]\n    [ '.)',     'fence \\'.\\' can not have right fence, got \\'.)\\'',  ]\n    [ '.p)',    'fence \\'.\\' can not have right fence, got \\'.p)\\'', ]\n    [ '.[',     'fence \\'.\\' can not have right fence, got \\'.[\\'',  ]\n    [ '<',      'unmatched fence in \\'<\\'',                          ]\n    [ '{',      'unmatched fence in \\'{\\'',                          ]\n    [ '[',      'unmatched fence in \\'[\\'',                          ]\n    [ '(',      'unmatched fence in \\'(\\'',                          ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    T.throws matcher, ( -> MKTS.FENCES.parse probe )\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.FENCES.parse accepts non-matching fences when so configured\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [ '<document>',     [ '<', 'document',     '>', ], ]\n    [ '{singlecolumn}', [ '{', 'singlecolumn', '}', ], ]\n    [ '{code}',         [ '{', 'code',         '}', ], ]\n    [ '[blockquote]',   [ '[', 'blockquote',   ']', ], ]\n    [ '(em)',           [ '(', 'em',           ')', ], ]\n    [ 'document>',      [ null, 'document',     '>', ], ]\n    [ 'singlecolumn}',  [ null, 'singlecolumn', '}', ], ]\n    [ 'code}',          [ null, 'code',         '}', ], ]\n    [ 'blockquote]',    [ null, 'blockquote',   ']', ], ]\n    [ 'em)',            [ null, 'em',           ')', ], ]\n    [ '<document',      [ '<', 'document',     null, ], ]\n    [ '{singlecolumn',  [ '{', 'singlecolumn', null, ], ]\n    [ '{code',          [ '{', 'code',         null, ], ]\n    [ '[blockquote',    [ '[', 'blockquote',   null, ], ]\n    [ '(em',            [ '(', 'em',           null, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    # help ( rpr probe ), MKTS.FENCES.parse probe\n    T.eq ( MKTS.FENCES.parse probe, symmetric: no ), matcher\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.TRACKER.new_tracker (short comprehensive test)\" ] = ( T, done ) ->\n  track = MKTS.TRACKER.new_tracker '(code)', '{multi-column}'\n  probes_and_matchers = [\n    [ [ '<', 'document',     ], [  no,  no, ], ]\n    [ [ '{', 'multi-column', ], [  no, yes, ], ]\n    [ [ '(', 'code',         ], [ yes, yes, ], ]\n    [ [ '{', 'multi-column', ], [ yes, yes, ], ]\n    [ [ '.', 'text',         ], [ yes, yes, ], ]\n    [ [ '}', 'multi-column', ], [ yes, yes, ], ]\n    [ [ ')', 'code',         ], [  no, yes, ], ]\n    [ [ '}', 'multi-column', ], [  no,  no, ], ]\n    [ [ '>', 'document',     ], [  no,  no, ], ]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    track probe\n    whisper probe\n    help '(code):', ( track.within '(code)' ), '{multi-column}:', ( track.within '{multi-column}' )\n    T.eq ( track.within '(code)'          ), matcher[ 0 ]\n    T.eq ( track.within '{multi-column}'  ), matcher[ 1 ]\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\nshow_events = ( probe, events ) ->\n  whisper probe\n  echo \"[\"\n  for event in events\n    echo \"    #{JSON.stringify event}\"\n  echo \"    ]\"\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (1)\" ] = ( T, done ) ->\n  # settings  = bare: yes\n  probe     = \"\"\"`<<($>>eval block<<$)>>`\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\"<\",\"document\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<($>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\">\",\"document\",null,{}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (2)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"`<<($>>eval block<<$)>>`\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<($>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (3)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"`<<(\\\\$>>eval block<<\\\\$)>>`\"\"\"\n  warn \"should merge texts\"\n  matcher   = [\n    [\"(\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<(\\\\$>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"eval block\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"text\",\"<<\\\\$)>>\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\")\",\"code\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"`\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (4)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"<<!end>>\"\"\"\n  warn \"match remark?\"\n  matcher   = [\n    [\"!\",\"end\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"stamped\":true}]\n    [\"#\",\"info\",\"encountered `<<!end>>` on line #1\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\",\"stamped\":true,\"badge\":\"$process_end_command\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (5)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"<<!multi-column>>\"\"\"\n  warn \"should not contain `.p`\"\n  matcher   = [\n    [\"!\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (6)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    aaa\n    <<(multi-column>>\n    bbb\n    <<multi-column)>>\n    ccc\n    \"\"\"\n  warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"aaa\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\"(\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"text\",\"\\nbbb\\n\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\")\",\"multi-column\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"text\",\"\\nccc\",{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":6,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (7)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    她說：「你好。」\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"她說：「你好。」\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md (8)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    A paragraph with *emphasis*.\n\n    A paragraph with **bold text**.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"A paragraph with \",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\"(\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n    [\".\",\"text\",\"emphasis\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\")\",\"em\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"*\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":2,\"markup\":\"\"}]\n    [\".\",\"text\",\"A paragraph with \",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\"(\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n    [\".\",\"text\",\"bold text\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\")\",\"strong\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"**\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":3,\"col_nr\":4,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS.mkts_events_from_md: footnotes\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    Here is an inline footnote^[whose text appears at the point of insertion],\n    followed by a referenced footnote[^1].\n\n    [^1]: Referenced footnotes must use matching references.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = [\n    [\".\",\"text\",\"Here is an inline footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\"(\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\"whose text appears at the point of insertion\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\")\",\"footnote\",0,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\",\\nfollowed by a referenced footnote\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\"(\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\"Referenced footnotes must use matching references.\",{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":4,\"col_nr\":5,\"markup\":\"\"}]\n    [\")\",\"footnote\",1,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"text\",\".\",{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    [\".\",\"p\",null,{\"line_nr\":1,\"col_nr\":3,\"markup\":\"\"}]\n    ]\n  step ( resume ) =>\n    result = yield MKTS.mkts_events_from_md probe, settings, resume\n    # show_events probe, result\n    T.eq matcher, result\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MKTS_XXX.tex_from_md (1)\" ] = ( T, done ) ->\n  settings  = bare: yes\n  probe     = \"\"\"\n    A paragraph with *emphasis*.\n\n    A paragraph with **bold text**.\n    \"\"\"\n  # warn \"missing `.p` inside `(multi-column)`\"\n  matcher   = \"\"\"\n    % begin of MD document\n    A paragraph with {\\\\mktsStyleItalic{}emphasis\\\\/}.\\\\mktsShowpar\\\\par\n    A paragraph with {\\\\mktsStyleBold{}bold text}.\\\\mktsShowpar\\\\par\n\n    % end of MD document\n\n    \"\"\"\n  step ( resume ) =>\n    result = yield MKTS_XXX.tex_from_md probe, settings, resume\n    echo result\n    # echo ( require '/home/flow/io/coffeenode-diff' ).colorize ( rpr matcher.trim() ), ( rpr result.trim() )\n    T.eq matcher.trim(), result.trim()\n    done()\n\n\n#===========================================================================================================\n# MAIN\n#-----------------------------------------------------------------------------------------------------------\n@_main = ( handler ) ->\n  test @, 'timeout': 2500\n\n\n############################################################################################################\nunless module.parent?\n  @_main()\n\n"]}