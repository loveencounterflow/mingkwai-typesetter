{"version":3,"sources":["cli.coffee"],"names":[],"mappings":"AAEA;AAAA,MAAA;;EAAA,CAAE,OAAA,CAAQ,oBAAR,CAAF,CAAgC,CAAC,OAAjC,CAAA;;EAOA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAwB5B,GAAA,GAAY,OAAA,CAAQ,WAAR;;EACZ,QAAA,GAAY,OAAO,CAAC,IAAM,CAAA,CAAA;;EAE1B,GACE,CAAC,OADH,CACW,CAAE,OAAA,CAAQ,iBAAR,CAAF,CAA+B,CAAA,SAAA,CAD1C,CAEE,CAAC,OAFH,CAEW,iBAFX,CAGE,CAAC,MAHH,CAGU,SAAE,QAAF;AACN,QAAA;IAAA,IAAA,CAAO,GAAG,CAAC,IAAJ,CAAS,EAAA,GAAG,QAAZ,CAAP,EAAmC,GAAG,CAAC,IAAJ,CAAS,MAAT,CAAnC,EAAwD,GAAG,CAAC,IAAJ,CAAS,QAAT,CAAxD;IACA,IAAA,GAAO,OAAA,CAAQ,QAAR;WACP,IAAI,CAAC,UAAU,CAAC,WAAhB,CAA4B,QAA5B;EAHM,CAHV;;EAQA,GAAG,CAAC,KAAJ,CAAU,OAAO,CAAC,IAAlB;AArDA","file":"cli.js","sourceRoot":"/source/","sourcesContent":["\n############################################################################################################\n( require 'source-map-support' ).install()\n\n\n############################################################################################################\n# njs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/cli'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# suspend                   = require 'coffeenode-suspend'\n# step                      = suspend.step\n# #...........................................................................................................\n# D                         = require 'pipedreams'\n# $                         = D.remit.bind D\n# $async                    = D.remit_async.bind D\n# #...........................................................................................................\n# ASYNC                     = require 'async'\n# #...........................................................................................................\n# ƒ                         = CND.format_number.bind CND\n# HELPERS                   = require './HELPERS'\n# # options                   = require './options'\n# TEXLIVEPACKAGEINFO        = require './TEXLIVEPACKAGEINFO'\n# options_route             = '../options.coffee'\n# { CACHE, OPTIONS, }       = require './OPTIONS'\n# SEMVER                    = require 'semver'\n# #...........................................................................................................\n# MKTS                      = require './main'\n\n\n\n\napp       = require 'commander'\napp_name  = process.argv[ 1 ]\n\napp\n  .version ( require '../package.json' )[ 'version' ]\n  .command 'mkts <filename>'\n  .action ( filename ) ->\n    help ( CND.grey \"#{app_name}\" ), ( CND.gold 'mkts' ), ( CND.lime filename )\n    MKTS = require './main'\n    MKTS.TEX_WRITER.pdf_from_md filename\n\napp.parse process.argv\n# debug '©nES6R', process.argv\n\n"]}